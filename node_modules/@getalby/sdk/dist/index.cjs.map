{"version":3,"file":"index.cjs","sources":["../src/utils.ts","../src/AlbyResponseError.ts","../src/types.ts","../src/request.ts","../src/OAuth2User.ts","../src/OAuth2Bearer.ts","../src/webln/NostrWeblnProvider.ts","../src/helpers.ts","../src/client.ts","../src/webln/OauthWeblnProvider.ts"],"sourcesContent":["// https://stackoverflow.com/a/62969380 + fix to remove empty entries (.filter(entry => entry))\nexport function buildQueryString(query: Record<string, unknown>): string {\n  return Object.entries(query)\n    .map(([key, value]) => (key && value ? `${key}=${value}` : \"\"))\n    .filter((entry) => entry)\n    .join(\"&\");\n}\n\nexport function basicAuthHeader(\n  client_id: string,\n  client_secret: string | undefined,\n) {\n  return `Basic ${btoa(`${client_id}:${client_secret}`)}`;\n}\n","export class AlbyResponseError extends Error {\n  status: number;\n  statusText: string;\n  headers: Record<string, any>;\n  error: any; // todo: typeable?\n  constructor(\n    status: number,\n    statusText: string,\n    headers: Headers,\n    error: any,\n  ) {\n    let message = status.toString();\n    if (statusText) {\n      message += ` ${statusText}`;\n    }\n    message += \": \";\n    if (error.message) {\n      message += error.message;\n    } else {\n      message += JSON.stringify(error);\n    }\n\n    super(message);\n    this.status = status;\n    this.statusText = statusText;\n    this.headers = headers;\n    this.error = error;\n  }\n}\n","import { AlbyResponseError } from \"./AlbyResponseError\";\nimport { RequestOptions } from \"./request\";\n\nexport type SuccessStatus = 200 | 201;\nexport type ResponseType = \"application/json\";\n\nexport interface AuthHeader {\n  Authorization: string;\n}\n\nexport interface GetTokenResponse {\n  /** Allows an application to obtain a new access token without prompting the user via the refresh token flow. */\n  refresh_token?: string;\n  /** Access tokens are the token that applications use to make API requests on behalf of a user.  */\n  access_token?: string;\n  token_type?: string;\n  expires_in?: number;\n  /** Comma-separated list of scopes for the token  */\n  scope?: string;\n}\n\nexport interface Token extends Omit<GetTokenResponse, \"expires_in\"> {\n  /** Date that the access_token will expire at.  */\n  expires_at?: number;\n}\n\nexport type GenerateAuthUrlOptions = { authorizeUrl?: string } & (\n  | {\n      code_challenge_method?: string;\n      code_challenge?: string;\n    }\n  | {\n      /** A random string you provide to verify against CSRF attacks.  The length of this string can be up to 500 characters. */\n      state?: string;\n      /** Specifies the method you are using to make a request (S256 OR plain). */\n      code_challenge_method: \"S256\";\n    }\n  | {\n      /** A random string you provide to verify against CSRF attacks.  The length of this string can be up to 500 characters. */\n      state: string;\n      /** A PKCE parameter, a random secret for each request you make. */\n      code_challenge: string;\n      /** Specifies the method you are using to make a request (S256 OR plain). */\n      code_challenge_method?: \"plain\";\n    }\n);\n\nexport abstract class OAuthClient implements AuthClient {\n  abstract token?: Token;\n  abstract generateAuthURL(options: GenerateAuthUrlOptions): string;\n  abstract requestAccessToken(code?: string): Promise<{ token: Token }>;\n  abstract getAuthHeader(\n    url?: string,\n    method?: string,\n  ): Promise<AuthHeader> | AuthHeader;\n}\n\nexport abstract class AuthClient {\n  abstract getAuthHeader(\n    url?: string,\n    method?: string,\n  ): Promise<AuthHeader> | AuthHeader;\n}\n\n// https://stackoverflow.com/a/50375286\nexport type UnionToIntersection<U> =\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (U extends any ? (k: U) => void : never) extends (k: infer I) => void\n    ? I\n    : never;\n\nexport type GetSuccess<T> = {\n  [K in SuccessStatus & keyof T]: GetContent<T[K]>;\n}[SuccessStatus & keyof T];\n\nexport type AlbyResponse<T> = UnionToIntersection<ExtractAlbyResponse<T>>;\n\nexport type GetContent<T> = \"content\" extends keyof T\n  ? ResponseType extends keyof T[\"content\"]\n    ? T[\"content\"][ResponseType]\n    : never\n  : never;\n\nexport type ExtractAlbyResponse<T> = \"responses\" extends keyof T\n  ? GetSuccess<T[\"responses\"]>\n  : never;\n\nexport type GetInvoicesRequestParams = {\n  q?: {\n    since?: string;\n    created_at_lt?: string;\n    created_at_gt?: string;\n  };\n  page?: number;\n  items?: number;\n};\n\nexport type InvoiceRequestParams = {\n  description?: string;\n  description_hash?: string;\n  amount: number;\n};\n\nexport type KeysendRequestParams = {\n  amount: number;\n  destination: string;\n  memo?: string;\n  customRecords?: Record<string, string>;\n};\n\nexport type SendPaymentRequestParams = {\n  invoice: string;\n  amount?: number;\n};\n\nexport type SendBoostagramRequestParams = {\n  recipient: {\n    address: string;\n    customKey?: string;\n    customValue?: string;\n  };\n  boostagram: unknown;\n  amount: number;\n};\n\nexport type SendBoostagramToAlbyRequestParams = {\n  /**\n   * the keysend custom value found at https://getalby.com/node\n   */\n  account: string;\n  amount: number;\n  memo?: string;\n};\n\n/**\n * @deprecated please use SendBoostagramToAlbyRequestParams\n */\nexport type SendToAlbyRequestParams = SendBoostagramToAlbyRequestParams;\n\nexport type CreateWebhookEndpointParams = {\n  url: string;\n  description?: string;\n  filter_types: string[];\n};\n\nexport type BaseWebhookEndpointResponse = {\n  url: string;\n  description?: string;\n  filter_types: string[];\n  created_at: string;\n  id: string;\n};\n\nexport type SwapInfoResponse = {\n  service_fee_percentage: number;\n  network_fee: number;\n  sats_per_vbyte: number;\n};\n\nexport type CreateSwapParams = {\n  amount: number;\n  address: string;\n  sats_per_vbyte: number;\n};\n\nexport type CreateSwapResponse = {\n  address: string;\n  service_fee: number;\n  network_fee: number;\n  amount: number;\n  total: number;\n  payment_request: string;\n};\n\nexport type CreateWebhookEndpointResponse = BaseWebhookEndpointResponse & {\n  endpoint_secret: string;\n};\n\nexport type Invoice = {\n  amount: number;\n  boostagram?: {\n    podcast: string;\n    feedID?: number;\n    itemID: number;\n    episode: string;\n    ts: number;\n    action: string;\n    app_name: string;\n    app_version: string;\n    value_msat: number;\n    value_msat_total: number;\n    name: string;\n    message: string;\n    sender_name: string;\n    episode_guid?: string;\n    boost_link?: string;\n    url?: string;\n    guid?: string;\n  } & Record<string, unknown>;\n  comment?: string;\n  created_at: string;\n  creation_date: number;\n  currency: string;\n  custom_records: Record<string, string>;\n  description_hash: null;\n  expires_at: string;\n  expiry: number;\n  fiat_currency: string;\n  fiat_in_cents: number;\n  identifier: string;\n  keysend_message?: string;\n  memo: string;\n  payer_name: string;\n  payer_pubkey?: string;\n  payment_hash: string;\n  payment_request: string;\n  preimage?: string;\n  r_hash_str: string;\n  settled: boolean;\n  settled_at: string;\n  state: string;\n  type: string;\n  value: number;\n  metadata?: {\n    // TODO: add typings\n    payer_data?: unknown;\n    zap_request?: unknown;\n  };\n} & Record<string, unknown>;\n\nexport type GetNWCAuthorizationUrlOptions = {\n  name?: string;\n  returnTo?: string;\n  expiresAt?: Date;\n  maxAmount?: number;\n  budgetRenewal?: \"never\" | \"daily\" | \"weekly\" | \"monthly\" | \"yearly\";\n  editable?: boolean;\n};\n\nexport type SendPaymentResponse = {\n  amount: number;\n  description: string;\n  destination: string;\n  fee: number;\n  payment_hash: string;\n  payment_preimage: string;\n  payment_request: string;\n};\n\nexport type GetAccountBalanceResponse = {\n  balance: number;\n  currency: string;\n  unit: string;\n};\n\nexport type GetAccountInformationResponse = {\n  identifier: string;\n  email: string;\n  name?: string;\n  avatar?: string;\n  keysend_custom_key: string;\n  keysend_custom_value: string;\n  keysend_pubkey: string;\n  lightning_address?: string;\n  nostr_pubkey?: string;\n};\n\nexport type DecodedInvoice = {\n  currency: string;\n  /**\n   * unix timestamp in seconds\n   */\n  created_at: number;\n  /**\n   * expiry from the created_at time in seconds (not a timestamp)\n   */\n  expiry: number;\n  payee: string;\n  msatoshi: number;\n  description: string;\n  payment_hash: string;\n  min_final_cltv_expiry: number;\n  amount: number;\n  payee_alias: string;\n};\n\nexport { AlbyResponseError, RequestOptions };\n","import { buildQueryString } from \"./utils\";\nimport { AlbyResponseError, AuthClient } from \"./types\";\n\nconst BASE_URL = \"https://api.getalby.com\";\n\nexport interface RequestOptions extends Omit<RequestInit, \"body\"> {\n  auth?: AuthClient;\n  endpoint: string;\n  params?: Record<string, any>;\n  user_agent?: string;\n  request_body?: Record<string, any>;\n  method?: string;\n  max_retries?: number;\n  base_url?: string;\n}\n\nasync function fetchWithRetries(\n  url: RequestInfo,\n  init: RequestInit,\n  max_retries = 0,\n): Promise<Response> {\n  const res = await fetch(url, init);\n  if (res.status === 429 && max_retries > 0) {\n    const rateLimitReset = Number(res.headers.get(\"x-rate-limit-reset\"));\n    const rateLimitRemaining = Number(\n      res.headers.get(\"x-rate-limit-remaining\"),\n    );\n    const timeTillReset = rateLimitReset * 1000 - Date.now();\n    let timeToWait = 1000;\n    if (rateLimitRemaining === 0) timeToWait = timeTillReset;\n    await new Promise((resolve) => setTimeout(resolve, timeToWait));\n    return fetchWithRetries(url, init, max_retries - 1);\n  }\n  return res;\n}\n\nexport async function request({\n  auth,\n  endpoint,\n  params: query = {},\n  request_body,\n  method,\n  max_retries,\n  base_url = BASE_URL,\n  user_agent,\n  headers,\n  ...options\n}: RequestOptions): Promise<Response> {\n  const url = new URL(base_url + endpoint);\n  url.search = buildQueryString(query);\n  const isPost = method === \"POST\" && !!request_body;\n  const authHeader = auth\n    ? await auth.getAuthHeader(url.href, method)\n    : undefined;\n  const response = await fetchWithRetries(\n    url.toString(),\n    {\n      headers: {\n        ...(isPost\n          ? { \"Content-Type\": \"application/json; charset=utf-8\" }\n          : undefined),\n        ...authHeader,\n        ...headers,\n        ...{\n          \"User-Agent\": user_agent ?? \"@getalby/sdk\",\n          \"X-User-Agent\": user_agent ?? \"@getalby/sdk\",\n        },\n      },\n      method,\n      body: isPost ? JSON.stringify(request_body) : undefined,\n      ...options,\n    },\n    max_retries,\n  );\n  if (!response.ok) {\n    const error = await response.json();\n    throw new AlbyResponseError(\n      response.status,\n      response.statusText,\n      response.headers,\n      error,\n    );\n  }\n  return response;\n}\n\nexport async function rest<T = any>(args: RequestOptions): Promise<T> {\n  const response = await request(args);\n  return response.json() as any;\n}\n","import CryptoJS from \"crypto-js\";\nimport { buildQueryString, basicAuthHeader } from \"./utils\";\nimport {\n  OAuthClient,\n  AuthHeader,\n  GetTokenResponse,\n  Token,\n  GenerateAuthUrlOptions,\n} from \"./types\";\nimport { RequestOptions, rest } from \"./request\";\nimport EventEmitter from \"events\";\n\nconst AUTHORIZE_URL = \"https://getalby.com/oauth\";\n\nexport type OAuth2Scopes =\n  | \"account:read\"\n  | \"invoices:create\"\n  | \"invoices:read\"\n  | \"transactions:read\"\n  | \"balance:read\"\n  | \"payments:send\";\n\nexport interface OAuth2UserOptions {\n  client_id: string;\n  client_secret?: string;\n  callback: string;\n  scopes: OAuth2Scopes[];\n  request_options?: Partial<RequestOptions>;\n  user_agent: string;\n  token?: Token;\n}\n\nexport type TokenRefreshedListener = (tokens: Token) => void;\nexport type TokenRefreshFailedListener = (error: Error) => void;\nexport type EventName = \"tokenRefreshed\" | \"tokenRefreshFailed\";\nexport type EventListener = TokenRefreshedListener | TokenRefreshFailedListener;\n\nfunction processTokenResponse(token: GetTokenResponse): Token {\n  const { expires_in, ...rest } = token;\n  return {\n    ...rest,\n    ...(!!expires_in && {\n      expires_at: Date.now() + expires_in * 1000,\n    }),\n  };\n}\n\nexport class OAuth2User implements OAuthClient {\n  token?: Token;\n  options: OAuth2UserOptions;\n  code_verifier?: string;\n  code_challenge?: string;\n  private _refreshAccessTokenPromise: Promise<{ token: Token }> | null;\n  private _tokenEvents: EventEmitter;\n\n  constructor(options: OAuth2UserOptions) {\n    this._tokenEvents = new EventEmitter();\n    const { token, ...defaultOptions } = options;\n    this.options = { client_secret: \"\", ...defaultOptions };\n    this.token = token;\n    this._refreshAccessTokenPromise = null;\n  }\n\n  /**\n   * Subscribe to the events\n   */\n  on(eventName: EventName, listener: EventListener): void {\n    this._tokenEvents.on(eventName, listener);\n  }\n\n  /**\n   * Refresh the access token\n   */\n  async refreshAccessToken(): Promise<{ token: Token }> {\n    if (this._refreshAccessTokenPromise) {\n      return this._refreshAccessTokenPromise;\n    }\n    this._refreshAccessTokenPromise = new Promise(async (resolve, reject) => {\n      try {\n        const refresh_token = this.token?.refresh_token;\n        const { client_id, client_secret, request_options, user_agent } =\n          this.options;\n        if (!client_id) {\n          throw new Error(\"client_id is required\");\n        }\n        if (!refresh_token) {\n          throw new Error(\"refresh_token is required\");\n        }\n        const data = await rest<GetTokenResponse>({\n          ...request_options,\n          endpoint: `/oauth/token`,\n          params: {\n            client_id,\n            grant_type: \"refresh_token\",\n            refresh_token,\n          },\n          user_agent,\n          method: \"POST\",\n          headers: {\n            ...request_options?.headers,\n            \"Content-type\": \"application/x-www-form-urlencoded\",\n            ...{\n              Authorization: basicAuthHeader(client_id, client_secret),\n            },\n          },\n        });\n        const token = processTokenResponse(data);\n        this.token = token;\n        resolve({ token });\n        this._tokenEvents.emit(\"tokenRefreshed\", this.token);\n      } catch (error) {\n        console.log(error);\n        reject(error);\n        this._tokenEvents.emit(\"tokenRefreshFailed\", error);\n      } finally {\n        this._refreshAccessTokenPromise = null;\n      }\n    });\n    return this._refreshAccessTokenPromise;\n  }\n\n  /**\n   * Check if an access token is expired\n   */\n  isAccessTokenExpired(): boolean {\n    const refresh_token = this.token?.refresh_token;\n    const expires_at = this.token?.expires_at;\n    if (!expires_at) return true;\n    return !!refresh_token && expires_at <= Date.now() + 1000;\n  }\n\n  /**\n   * Request an access token\n   */\n  async requestAccessToken(code?: string): Promise<{ token: Token }> {\n    const { client_id, client_secret, callback, request_options, user_agent } =\n      this.options;\n    const code_verifier = this.code_verifier;\n    if (!client_id) {\n      throw new Error(\"client_id is required\");\n    }\n    if (!client_secret && !code_verifier) {\n      throw new Error(\"either client_secret is required, or code should be generated using a challenge\");\n    }\n    if (!callback) {\n      throw new Error(\"callback is required\");\n    }\n    const params = {\n      code,\n      grant_type: \"authorization_code\",\n      code_verifier,\n      client_id,\n      redirect_uri: callback,\n    };\n    const data = await rest<GetTokenResponse>({\n      ...request_options,\n      endpoint: `/oauth/token`,\n      params,\n      user_agent,\n      method: \"POST\",\n      headers: {\n        ...request_options?.headers,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        ...{\n          Authorization: basicAuthHeader(client_id, client_secret),\n        },\n      },\n    });\n    const token = processTokenResponse(data);\n    this.token = token;\n    return { token };\n  }\n\n  generateAuthURL(options?: GenerateAuthUrlOptions): string {\n    if (!options) {\n      options = {};\n    }\n    console.log(options);\n    const { client_id, callback, scopes } = this.options;\n    if (!callback) throw new Error(\"callback required\");\n    if (!scopes) throw new Error(\"scopes required\");\n    let code_challenge_method;\n    if (options.code_challenge_method === \"S256\") {\n      const code_verifier = CryptoJS.lib.WordArray.random(64);\n      this.code_verifier = code_verifier.toString();\n      this.code_challenge = CryptoJS.SHA256(this.code_verifier)\n        .toString(CryptoJS.enc.Base64)\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/\\=+$/, \"\");\n      code_challenge_method = \"S256\";\n    } else if (\n      options.code_challenge_method === \"plain\" &&\n      options.code_challenge\n    ) {\n      this.code_challenge = options.code_challenge;\n      this.code_verifier = options.code_challenge;\n      code_challenge_method = \"plain\";\n    }\n    const code_challenge = this.code_challenge;\n    const url = new URL(options.authorizeUrl || AUTHORIZE_URL);\n    url.search = buildQueryString({\n      ...options,\n      client_id,\n      scope: scopes.join(\" \"),\n      response_type: \"code\",\n      redirect_uri: callback,\n      code_challenge_method,\n      code_challenge,\n    });\n    return url.toString();\n  }\n\n  async getAuthHeader(): Promise<AuthHeader> {\n    if (!this.token?.access_token) throw new Error(\"access_token is required\");\n    if (this.isAccessTokenExpired()) {\n      await this.refreshAccessToken();\n    }\n    return {\n      Authorization: `Bearer ${this.token.access_token}`,\n    };\n  }\n}\n","import { AuthClient, AuthHeader } from \"./types\";\n\nexport class OAuth2Bearer implements AuthClient {\n  private bearer_token: string;\n\n  constructor(bearer_token: string) {\n    this.bearer_token = bearer_token;\n  }\n\n  getAuthHeader(): AuthHeader {\n    return {\n      Authorization: `Bearer ${this.bearer_token}`,\n    };\n  }\n}\n","import {\n  nip04,\n  relayInit,\n  getEventHash,\n  nip19,\n  generatePrivateKey,\n  getPublicKey,\n  Relay,\n  Event,\n  UnsignedEvent,\n  finishEvent,\n  Kind,\n} from \"nostr-tools\";\nimport {\n  GetBalanceResponse,\n  KeysendArgs,\n  RequestInvoiceArgs,\n  MakeInvoiceResponse,\n  SendPaymentResponse,\n  SignMessageResponse,\n  WebLNNode,\n  WebLNProvider,\n  WebLNRequestMethod,\n  LookupInvoiceArgs,\n  LookupInvoiceResponse,\n} from \"@webbtc/webln-types\";\nimport { GetInfoResponse } from \"@webbtc/webln-types\";\nimport { GetNWCAuthorizationUrlOptions } from \"../types\";\n\nconst NWCs: Record<string, NostrWebLNOptions> = {\n  alby: {\n    authorizationUrl: \"https://nwc.getalby.com/apps/new\",\n    relayUrl: \"wss://relay.getalby.com/v1\",\n    walletPubkey:\n      \"69effe7b49a6dd5cf525bd0905917a5005ffe480b58eeb8e861418cf3ae760d9\",\n  },\n};\n\ninterface NostrWebLNOptions {\n  authorizationUrl?: string; // the URL to the NWC interface for the user to confirm the session\n  relayUrl: string;\n  walletPubkey: string;\n  secret?: string;\n}\n\ntype Nip07Provider = {\n  getPublicKey(): Promise<string>;\n  signEvent(event: UnsignedEvent): Promise<Event>;\n};\n\nconst nip47ToWeblnRequestMap = {\n  get_balance: \"getBalance\",\n  make_invoice: \"makeInvoice\",\n  pay_invoice: \"sendPayment\",\n  lookup_invoice: \"lookupInvoice\",\n};\n\nexport class NostrWebLNProvider implements WebLNProvider, Nip07Provider {\n  relay: Relay;\n  relayUrl: string;\n  secret: string | undefined;\n  walletPubkey: string;\n  options: NostrWebLNOptions;\n  subscribers: Record<string, (payload: unknown) => void>;\n\n  static parseWalletConnectUrl(walletConnectUrl: string) {\n    walletConnectUrl = walletConnectUrl\n      .replace(\"nostrwalletconnect://\", \"http://\")\n      .replace(\"nostr+walletconnect://\", \"http://\"); // makes it possible to parse with URL in the different environments (browser/node/...)\n    const url = new URL(walletConnectUrl);\n    const options = {} as NostrWebLNOptions;\n    options.walletPubkey = url.host;\n    const secret = url.searchParams.get(\"secret\");\n    const relayUrl = url.searchParams.get(\"relay\");\n    if (secret) {\n      options.secret = secret;\n    }\n    if (relayUrl) {\n      options.relayUrl = relayUrl;\n    }\n    return options;\n  }\n\n  static withNewSecret(\n    options?: ConstructorParameters<typeof NostrWebLNProvider>[0],\n  ) {\n    options = options || {};\n    options.secret = generatePrivateKey();\n    return new NostrWebLNProvider(options);\n  }\n\n  constructor(options?: {\n    providerName?: string;\n    authorizationUrl?: string;\n    relayUrl?: string;\n    secret?: string;\n    walletPubkey?: string;\n    nostrWalletConnectUrl?: string;\n  }) {\n    if (options && options.nostrWalletConnectUrl) {\n      options = {\n        ...NostrWebLNProvider.parseWalletConnectUrl(\n          options.nostrWalletConnectUrl,\n        ),\n        ...options,\n      };\n    }\n    const providerOptions = NWCs[\n      options?.providerName || \"alby\"\n    ] as NostrWebLNOptions;\n    this.options = {\n      ...providerOptions,\n      ...(options || {}),\n    } as NostrWebLNOptions;\n    this.relayUrl = this.options.relayUrl;\n    this.relay = relayInit(this.relayUrl);\n    if (this.options.secret) {\n      this.secret = (\n        this.options.secret.toLowerCase().startsWith(\"nsec\")\n          ? nip19.decode(this.options.secret).data\n          : this.options.secret\n      ) as string;\n    }\n    this.walletPubkey = (\n      this.options.walletPubkey.toLowerCase().startsWith(\"npub\")\n        ? nip19.decode(this.options.walletPubkey).data\n        : this.options.walletPubkey\n    ) as string;\n    this.subscribers = {};\n\n    if (globalThis.WebSocket === undefined) {\n      console.error(\n        \"WebSocket is undefined. Make sure to `import websocket-polyfill` for nodejs environments\",\n      );\n    }\n  }\n\n  on(name: string, callback: () => void) {\n    this.subscribers[name] = callback;\n  }\n\n  notify(name: string, payload?: unknown) {\n    const callback = this.subscribers[name];\n    if (callback) {\n      callback(payload);\n    }\n  }\n\n  getNostrWalletConnectUrl(includeSecret = true) {\n    let url = `nostr+walletconnect://${this.walletPubkey}?relay=${this.relayUrl}&pubkey=${this.publicKey}`;\n    if (includeSecret) {\n      url = `${url}&secret=${this.secret}`;\n    }\n    return url;\n  }\n\n  get nostrWalletConnectUrl() {\n    return this.getNostrWalletConnectUrl();\n  }\n\n  get connected() {\n    return this.relay.status === 1;\n  }\n\n  get publicKey() {\n    if (!this.secret) {\n      throw new Error(\"Missing secret key\");\n    }\n    return getPublicKey(this.secret);\n  }\n\n  getPublicKey(): Promise<string> {\n    return Promise.resolve(this.publicKey);\n  }\n\n  signEvent(event: UnsignedEvent): Promise<Event> {\n    if (!this.secret) {\n      throw new Error(\"Missing secret key\");\n    }\n\n    return Promise.resolve(finishEvent(event, this.secret));\n  }\n\n  getEventHash(event: Event) {\n    return getEventHash(event);\n  }\n\n  async enable() {\n    if (this.connected) {\n      return Promise.resolve();\n    }\n    await this.relay.connect();\n  }\n\n  close() {\n    return this.relay.close();\n  }\n\n  async encrypt(pubkey: string, content: string) {\n    if (!this.secret) {\n      throw new Error(\"Missing secret\");\n    }\n    const encrypted = await nip04.encrypt(this.secret, pubkey, content);\n    return encrypted;\n  }\n\n  async decrypt(pubkey: string, content: string) {\n    if (!this.secret) {\n      throw new Error(\"Missing secret\");\n    }\n    const decrypted = await nip04.decrypt(this.secret, pubkey, content);\n    return decrypted;\n  }\n\n  // WebLN compatible response\n  // TODO: use NIP-47 get_info call\n  async getInfo(): Promise<GetInfoResponse> {\n    return {\n      methods: [\n        \"getInfo\",\n        \"sendPayment\",\n        \"makeInvoice\",\n        \"getBalance\",\n        \"lookupInvoice\",\n      ],\n      node: {} as WebLNNode,\n      supports: [\"lightning\"],\n      version: \"NWC\",\n    };\n  }\n\n  getBalance() {\n    this.checkConnected();\n\n    return this.executeNip47Request<GetBalanceResponse, { balance: number }>(\n      \"get_balance\",\n      undefined,\n      (result) => result.balance !== undefined,\n      (result) => ({\n        // NWC uses msats - convert to sats for webln\n        balance: Math.floor(result.balance / 1000),\n        currency: \"sats\",\n      }),\n    );\n  }\n\n  sendPayment(invoice: string) {\n    this.checkConnected();\n\n    return this.executeNip47Request<SendPaymentResponse, { preimage: string }>(\n      \"pay_invoice\",\n      {\n        invoice,\n      },\n      (result) => !!result.preimage,\n      (result) => ({ preimage: result.preimage }),\n    );\n  }\n\n  // not-yet implemented WebLN interface methods\n  keysend(args: KeysendArgs): Promise<SendPaymentResponse> {\n    throw new Error(\"Method not implemented.\");\n  }\n  lnurl(\n    lnurl: string,\n  ): Promise<{ status: \"OK\" } | { status: \"ERROR\"; reason: string }> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  makeInvoice(args: string | number | RequestInvoiceArgs) {\n    this.checkConnected();\n\n    const requestInvoiceArgs: RequestInvoiceArgs | undefined =\n      typeof args === \"object\" ? (args as RequestInvoiceArgs) : undefined;\n    const amount = +(requestInvoiceArgs?.amount ?? (args as string | number));\n\n    if (!amount) {\n      throw new Error(\"No amount specified\");\n    }\n\n    return this.executeNip47Request<MakeInvoiceResponse, { invoice: string }>(\n      \"make_invoice\",\n      {\n        amount: amount * 1000, // NIP-47 uses msat\n        description: requestInvoiceArgs?.defaultMemo,\n        // TODO: support additional fields below\n        //expiry: 86500,\n        //description_hash: \"b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9\"\n      },\n      (result) => !!result.invoice,\n      (result) => ({ paymentRequest: result.invoice }),\n    );\n  }\n\n  lookupInvoice(args: LookupInvoiceArgs) {\n    this.checkConnected();\n\n    return this.executeNip47Request<\n      LookupInvoiceResponse,\n      { invoice: string; paid: boolean }\n    >(\n      \"lookup_invoice\",\n      args,\n      (result) => result.invoice !== undefined && result.paid !== undefined,\n      (result) => ({ paymentRequest: result.invoice, paid: result.paid }),\n    );\n  }\n\n  request(method: WebLNRequestMethod, args?: unknown): Promise<unknown> {\n    throw new Error(\"Method not implemented.\");\n  }\n  signMessage(message: string): Promise<SignMessageResponse> {\n    throw new Error(\"Method not implemented.\");\n  }\n  verifyMessage(signature: string, message: string): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  getAuthorizationUrl(options?: GetNWCAuthorizationUrlOptions) {\n    if (!this.options.authorizationUrl) {\n      throw new Error(\"Missing authorizationUrl option\");\n    }\n    const url = new URL(this.options.authorizationUrl);\n    if (options?.name) {\n      url.searchParams.set(\"c\", options?.name);\n    }\n    url.searchParams.set(\"pubkey\", this.publicKey);\n    if (options?.returnTo) {\n      url.searchParams.set(\"return_to\", options.returnTo);\n    }\n\n    if (options?.budgetRenewal) {\n      url.searchParams.set(\"budget_renewal\", options.budgetRenewal);\n    }\n    if (options?.expiresAt) {\n      url.searchParams.set(\n        \"expires_at\",\n        Math.floor(options.expiresAt.getTime() / 1000).toString(),\n      );\n    }\n    if (options?.maxAmount) {\n      url.searchParams.set(\"max_amount\", options.maxAmount.toString());\n    }\n    if (options?.editable !== undefined) {\n      url.searchParams.set(\"editable\", options.editable.toString());\n    }\n\n    return url;\n  }\n\n  initNWC(options: GetNWCAuthorizationUrlOptions = {}) {\n    // here we assume an browser context and window/document is available\n    // we set the location.host as a default name if none is given\n    if (!options.name) {\n      options.name = document.location.host;\n    }\n    const url = this.getAuthorizationUrl(options);\n    const height = 600;\n    const width = 400;\n    const top = window.outerHeight / 2 + window.screenY - height / 2;\n    const left = window.outerWidth / 2 + window.screenX - width / 2;\n\n    return new Promise((resolve, reject) => {\n      const popup = window.open(\n        url.toString(),\n        `${document.title} - Wallet Connect`,\n        `height=${height},width=${width},top=${top},left=${left}`,\n      );\n      if (!popup) {\n        reject();\n        return;\n      } // only for TS?\n\n      const checkForPopup = () => {\n        if (popup && popup.closed) {\n          reject();\n          clearInterval(popupChecker);\n          window.removeEventListener(\"message\", onMessage);\n        }\n      };\n\n      const onMessage = (message: {\n        data?: { type: \"nwc:success\" | unknown };\n        origin: string;\n      }) => {\n        const data = message.data;\n        if (\n          data &&\n          data.type === \"nwc:success\" &&\n          message.origin === `${url.protocol}//${url.host}`\n        ) {\n          resolve(data);\n          clearInterval(popupChecker);\n          window.removeEventListener(\"message\", onMessage);\n          if (popup) {\n            popup.close(); // close the popup\n          }\n        }\n      };\n      const popupChecker = setInterval(checkForPopup, 500);\n      window.addEventListener(\"message\", onMessage);\n    });\n  }\n\n  private checkConnected() {\n    if (!this.connected) {\n      throw new Error(\n        \"please call enable() and await the promise before calling this function\",\n      );\n    }\n  }\n\n  private executeNip47Request<T, R>(\n    nip47Method: keyof typeof nip47ToWeblnRequestMap,\n    params: unknown,\n    resultValidator: (result: R) => boolean,\n    resultMapper: (result: R) => T,\n  ) {\n    const weblnMethod = nip47ToWeblnRequestMap[nip47Method];\n    return new Promise<T>((resolve, reject) => {\n      (async () => {\n        const command = {\n          method: nip47Method,\n          params,\n        };\n        const encryptedCommand = await this.encrypt(\n          this.walletPubkey,\n          JSON.stringify(command),\n        );\n        const unsignedEvent: UnsignedEvent = {\n          kind: 23194 as Kind,\n          created_at: Math.floor(Date.now() / 1000),\n          tags: [[\"p\", this.walletPubkey]],\n          content: encryptedCommand,\n          pubkey: this.publicKey,\n        };\n\n        const event = await this.signEvent(unsignedEvent);\n        // subscribe to NIP_47_SUCCESS_RESPONSE_KIND and NIP_47_ERROR_RESPONSE_KIND\n        // that reference the request event (NIP_47_REQUEST_KIND)\n        const sub = this.relay.sub([\n          {\n            kinds: [23195],\n            authors: [this.walletPubkey],\n            \"#e\": [event.id],\n          },\n        ]);\n\n        function replyTimeout() {\n          sub.unsub();\n          //console.error(`Reply timeout: event ${event.id} `);\n          reject({\n            error: `reply timeout: event ${event.id}`,\n            code: \"INTERNAL\",\n          });\n        }\n\n        const replyTimeoutCheck = setTimeout(replyTimeout, 60000);\n\n        sub.on(\"event\", async (event) => {\n          //console.log(`Received reply event: `, event);\n          clearTimeout(replyTimeoutCheck);\n          sub.unsub();\n          const decryptedContent = await this.decrypt(\n            this.walletPubkey,\n            event.content,\n          );\n          let response;\n          try {\n            response = JSON.parse(decryptedContent);\n          } catch (e) {\n            reject({ error: \"invalid response\", code: \"INTERNAL\" });\n            return;\n          }\n          // @ts-ignore // event is still unknown in nostr-tools\n          if (event.kind == 23195 && response.result) {\n            //console.log(\"NIP-47 result\", response.result);\n            if (resultValidator(response.result)) {\n              resolve(resultMapper(response.result));\n              this.notify(weblnMethod, response.result);\n            } else {\n              reject({\n                error:\n                  \"Response from NWC failed validation: \" +\n                  JSON.stringify(response.result),\n                code: \"INTERNAL\",\n              });\n            }\n          } else {\n            reject({\n              error: response.error?.message,\n              code: response.error?.code,\n            });\n          }\n        });\n\n        function publishTimeout() {\n          //console.error(`Publish timeout: event ${event.id}`);\n          reject({ error: `Publish timeout: event ${event.id}` });\n        }\n        const publishTimeoutCheck = setTimeout(publishTimeout, 5000);\n\n        try {\n          await this.relay.publish(event);\n          clearTimeout(publishTimeoutCheck);\n          //console.debug(`Event ${event.id} for ${invoice} published`);\n        } catch (error) {\n          //console.error(`Failed to publish to ${this.relay.url}`, error);\n          clearTimeout(publishTimeoutCheck);\n          reject({ error: `Failed to publish request: ${error}` });\n        }\n      })();\n    });\n  }\n}\n\nexport const NWC = NostrWebLNProvider;\n","import { SendBoostagramRequestParams } from \"./types\";\n\nexport function keysendParamsFromBoostagram(\n  boostagramParams: SendBoostagramRequestParams,\n) {\n  const customRecords: Record<string, string> = {};\n  if (\n    boostagramParams.recipient.customKey &&\n    boostagramParams.recipient.customValue\n  ) {\n    customRecords[boostagramParams.recipient.customKey] =\n      boostagramParams.recipient.customValue;\n  }\n  // https://github.com/lightning/blips/blob/master/blip-0010.md\n  customRecords[\"7629169\"] = JSON.stringify(boostagramParams.boostagram);\n\n  return {\n    destination: boostagramParams.recipient.address,\n    amount: boostagramParams.amount,\n    customRecords: customRecords,\n  };\n}\n","import { OAuth2Bearer } from \"./auth\";\nimport { keysendParamsFromBoostagram } from \"./helpers\";\nimport { RequestOptions, rest } from \"./request\";\nimport {\n  AuthClient,\n  BaseWebhookEndpointResponse,\n  CreateSwapParams,\n  CreateSwapResponse,\n  CreateWebhookEndpointParams,\n  CreateWebhookEndpointResponse,\n  DecodedInvoice,\n  GetAccountBalanceResponse,\n  GetAccountInformationResponse,\n  GetInvoicesRequestParams,\n  Invoice,\n  InvoiceRequestParams,\n  KeysendRequestParams,\n  SendBoostagramRequestParams,\n  SendPaymentRequestParams,\n  SendPaymentResponse,\n  SendBoostagramToAlbyRequestParams,\n  SwapInfoResponse,\n} from \"./types\";\n\nexport class Client {\n  auth: AuthClient;\n  defaultRequestOptions?: Partial<RequestOptions>;\n\n  constructor(\n    auth: string | AuthClient,\n    requestOptions?: Partial<RequestOptions>,\n  ) {\n    this.auth = typeof auth === \"string\" ? new OAuth2Bearer(auth) : auth;\n    this.defaultRequestOptions = {\n      ...requestOptions,\n      user_agent: requestOptions?.user_agent,\n    };\n  }\n\n  accountBalance(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ): Promise<GetAccountBalanceResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/balance`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  accountSummary(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ) {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/user/summary`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  accountInformation(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ): Promise<GetAccountInformationResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/user/me`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  accountValue4Value(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ) {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/user/value4value`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  incomingInvoices(\n    params: GetInvoicesRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice[]> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices/incoming`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  outgoingInvoices(\n    params: GetInvoicesRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice[]> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices/outgoing`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  invoices(\n    params: GetInvoicesRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice[]> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  getInvoice(\n    paymentHash: string,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices/${paymentHash}`,\n      method: \"GET\",\n    });\n  }\n\n  decodeInvoice(\n    paymentRequest: string,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<DecodedInvoice> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/decode/bolt11/${paymentRequest}`,\n      method: \"GET\",\n    });\n  }\n\n  createInvoice(\n    invoice: InvoiceRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices`,\n      request_body: invoice,\n      method: \"POST\",\n    });\n  }\n\n  keysend(\n    args: KeysendRequestParams | KeysendRequestParams[],\n    request_options?: Partial<RequestOptions>,\n  ): Promise<SendPaymentResponse> {\n    let endpoint, request_body;\n    if (Array.isArray(args)) {\n      endpoint = \"/payments/keysend/multi\";\n      request_body = { keysends: args };\n    } else {\n      endpoint = \"/payments/keysend\";\n      request_body = args;\n    }\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint,\n      request_body,\n      method: \"POST\",\n    });\n  }\n\n  sendPayment(\n    params: SendPaymentRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<SendPaymentResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/payments/bolt11`,\n      request_body: params,\n      method: \"POST\",\n    });\n  }\n\n  sendBoostagram(\n    args: SendBoostagramRequestParams | SendBoostagramRequestParams[],\n    request_options?: Partial<RequestOptions>,\n  ) {\n    let endpoint, request_body;\n    if (Array.isArray(args)) {\n      endpoint = \"/payments/keysend/multi\";\n      const keysends = args.map((b) => keysendParamsFromBoostagram(b));\n      request_body = { keysends };\n    } else {\n      endpoint = \"/payments/keysend\";\n      request_body = keysendParamsFromBoostagram(args);\n    }\n\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint,\n      request_body,\n      method: \"POST\",\n    });\n  }\n\n  /**\n   * @deprecated please use sendBoostagramToAlbyAccount. Deprecated since v2.7.0. Will be removed in v3.0.0.\n   */\n  sendToAlbyAccount(\n    args: SendBoostagramToAlbyRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ) {\n    console.warn(\n      \"sendToAlbyAccount is deprecated. Please use sendBoostagramToAlbyAccount instead.\",\n    );\n    return this.sendBoostagramToAlbyAccount(args, request_options);\n  }\n\n  sendBoostagramToAlbyAccount(\n    args: SendBoostagramToAlbyRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ) {\n    const params = {\n      destination:\n        \"030a58b8653d32b99200a2334cfe913e51dc7d155aa0116c176657a4f1722677a3\",\n      customRecords: {\n        \"696969\": args.account,\n      },\n      amount: args.amount,\n      memo: args.memo,\n    };\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/payments/keysend`,\n      request_body: params,\n      method: \"POST\",\n    });\n  }\n\n  createWebhookEndpoint(\n    params: CreateWebhookEndpointParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<CreateWebhookEndpointResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/webhook_endpoints`,\n      request_body: params,\n      method: \"POST\",\n    });\n  }\n\n  deleteWebhookEndpoint(\n    id: string,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<BaseWebhookEndpointResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/webhook_endpoints/${id}`,\n      method: \"DELETE\",\n    });\n  }\n\n  getSwapInfo(\n    request_options?: Partial<RequestOptions>,\n  ): Promise<SwapInfoResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/swaps/info`,\n      method: \"GET\",\n    });\n  }\n\n  createSwap(\n    params: CreateSwapParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<CreateSwapResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/swaps`,\n      method: \"POST\",\n      request_body: params,\n    });\n  }\n}\n","import { Client } from \"../client\";\nimport { OAuthClient, KeysendRequestParams } from \"../types\";\n\ninterface RequestInvoiceArgs {\n  amount: string | number;\n  defaultMemo?: string;\n}\n\nconst isBrowser = () =>\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\nexport class OauthWeblnProvider {\n  client: Client;\n  auth: OAuthClient;\n  oauth: boolean;\n  subscribers: Record<string, (payload: any) => void>;\n  isExecuting: boolean;\n\n  constructor(options: { auth: OAuthClient }) {\n    this.auth = options.auth;\n    this.client = new Client(options.auth);\n    this.oauth = true;\n    this.subscribers = {};\n    this.isExecuting = false;\n  }\n\n  on(name: string, callback: () => void) {\n    this.subscribers[name] = callback;\n  }\n\n  notify(name: string, payload?: any) {\n    const callback = this.subscribers[name];\n    if (callback) {\n      callback(payload);\n    }\n  }\n\n  async enable() {\n    if (this.isExecuting) {\n      return;\n    }\n    if (this.auth.token?.access_token) {\n      return { enabled: true };\n    }\n    if (isBrowser()) {\n      try {\n        this.isExecuting = true;\n        const result = await this.openAuthorization();\n      } finally {\n        this.isExecuting = false;\n      }\n    } else {\n      throw new Error(\"Missing access token\");\n    }\n  }\n\n  async sendPayment(invoice: string) {\n    if (this.isExecuting) {\n      return;\n    }\n    try {\n      this.isExecuting = true;\n      const result = await this.client.sendPayment({ invoice });\n      this.notify(\"sendPayment\", result);\n      return {\n        preimage: result.payment_preimage,\n      };\n    } catch (error) {\n      let message = \"Unknown Error\";\n      if (error instanceof Error) message = error.message;\n      throw new Error(message);\n    } finally {\n      this.isExecuting = false;\n    }\n  }\n\n  async keysend(params: KeysendRequestParams) {\n    if (this.isExecuting) {\n      return;\n    }\n    try {\n      this.isExecuting = true;\n      const result = await this.client.keysend(params);\n      this.notify(\"keysend\", result);\n      return {\n        preimage: result.payment_preimage,\n      };\n    } catch (error) {\n      let message = \"Unknown Error\";\n      if (error instanceof Error) message = error.message;\n      throw new Error(message);\n    } finally {\n      this.isExecuting = false;\n    }\n  }\n\n  async getInfo() {\n    return {\n      alias: \"Alby\",\n    };\n  }\n\n  async makeInvoice(params: RequestInvoiceArgs) {\n    if (this.isExecuting) {\n      return;\n    }\n    try {\n      this.isExecuting = true;\n      const result = await this.client.createInvoice({\n        amount: parseInt(params.amount.toString()),\n        description: params.defaultMemo,\n      });\n      this.notify(\"makeInvoice\", result);\n      return {\n        paymentRequest: result.payment_request,\n      };\n    } catch (error) {\n      let message = \"Unknown Error\";\n      if (error instanceof Error) message = error.message;\n      throw new Error(message);\n    } finally {\n      this.isExecuting = false;\n    }\n  }\n\n  openAuthorization() {\n    const height = 700;\n    const width = 600;\n    const top = window.outerHeight / 2 + window.screenY - height / 2;\n    const left = window.outerWidth / 2 + window.screenX - width / 2;\n    const url = this.auth.generateAuthURL({ code_challenge_method: \"S256\" });\n\n    return new Promise((resolve, reject) => {\n      const popup = window.open(\n        url,\n        `${document.title} - WebLN enable`,\n        `height=${height},width=${width},top=${top},left=${left}`,\n      );\n      let processingCode = false;\n      window.addEventListener(\"message\", async (message) => {\n        const data = message.data;\n        if (\n          data &&\n          data.type === \"alby:oauth:success\" &&\n          message.origin ===\n            `${document.location.protocol}//${document.location.host}` &&\n          !processingCode\n        ) {\n          processingCode = true; // make sure we request the access token only once\n          console.info(\"Processing OAuth code response\");\n          const code = data.payload.code;\n          try {\n            await this.auth.requestAccessToken(code);\n            this.client = new Client(this.auth); // just to make sure we got a client with the correct auth and not the access token\n            if (popup) {\n              popup.close();\n            }\n            this.notify(\"enable\");\n            resolve({ enabled: true });\n          } catch (e) {\n            console.error(e);\n            reject({ enabled: false });\n          }\n        }\n      });\n    });\n  }\n}\n"],"names":["buildQueryString","query","Object","entries","map","key","value","filter","entry","join","basicAuthHeader","client_id","client_secret","btoa","_Error","AlbyResponseError","status","statusText","headers","error","_this","message","toString","JSON","stringify","this","Error","_excluded","rest","args","request","response","json","_ref","auth","endpoint","_ref$params","params","request_body","method","max_retries","base_url","_ref$base_url","BASE_URL","user_agent","options","_objectWithoutPropertiesLoose","authHeader","Promise","resolve","fetchWithRetries","url","isPost","undefined","body","ok","then","_temp","_result","search","getAuthHeader","href","e","reject","init","fetch","res","_exit2","_temp4","rateLimitReset","Number","get","rateLimitRemaining","timeTillReset","Date","now","timeToWait","setTimeout","processTokenResponse","token","expires_in","expires_at","OAuth2User","code_verifier","code_challenge","_refreshAccessTokenPromise","_tokenEvents","EventEmitter","defaultOptions","_excluded2","on","eventName","listener","refreshAccessToken","_this2","_this2$token","refresh_token","_this2$options","request_options","_extends","grant_type","Authorization","data","emit","_catch","console","log","_finallyRethrows","_wasThrown","_proto","isAccessTokenExpired","_this$token","_this$token2","requestAccessToken","code","_this4","_this4$options","callback","redirect_uri","generateAuthURL","code_challenge_method","_this$options","scopes","CryptoJS","lib","WordArray","random","SHA256","enc","Base64","replace","URL","authorizeUrl","scope","response_type","_this6$token","_temp3","_this6","access_token","OAuth2Bearer","bearer_token","prototype","NWCs","alby","authorizationUrl","relayUrl","walletPubkey","nip47ToWeblnRequestMap","get_balance","make_invoice","pay_invoice","lookup_invoice","NostrWebLNProvider","parseWalletConnectUrl","_options","relay","secret","subscribers","nostrWalletConnectUrl","providerOptions","providerName","relayInit","toLowerCase","startsWith","nip19","decode","globalThis","WebSocket","walletConnectUrl","host","searchParams","withNewSecret","generatePrivateKey","name","notify","payload","getNostrWalletConnectUrl","includeSecret","publicKey","getPublicKey","signEvent","event","finishEvent","getEventHash","enable","connected","connect","close","encrypt","pubkey","content","nip04","decrypt","getInfo","methods","node","supports","version","getBalance","checkConnected","executeNip47Request","result","balance","Math","floor","currency","sendPayment","invoice","preimage","keysend","lnurl","makeInvoice","_requestInvoiceArgs$a","requestInvoiceArgs","amount","description","defaultMemo","paymentRequest","lookupInvoice","paid","signMessage","verifyMessage","signature","getAuthorizationUrl","set","returnTo","budgetRenewal","expiresAt","getTime","maxAmount","editable","initNWC","document","location","window","outerHeight","screenY","height","left","outerWidth","screenX","width","popup","open","title","top","onMessage","type","origin","protocol","clearInterval","popupChecker","removeEventListener","setInterval","closed","addEventListener","nip47Method","resultValidator","resultMapper","_this7","weblnMethod","encryptedCommand","unsignedEvent","kind","created_at","tags","sub","kinds","authors","id","replyTimeoutCheck","unsub","clearTimeout","decryptedContent","parse","_response$error","_response$error2","publishTimeoutCheck","publish","NWC","keysendParamsFromBoostagram","boostagramParams","customRecords","recipient","customKey","customValue","boostagram","destination","address","Client","requestOptions","defaultRequestOptions","accountBalance","accountSummary","accountInformation","accountValue4Value","incomingInvoices","outgoingInvoices","invoices","getInvoice","paymentHash","decodeInvoice","createInvoice","Array","isArray","keysends","sendBoostagram","b","sendToAlbyAccount","warn","sendBoostagramToAlbyAccount","account","memo","createWebhookEndpoint","deleteWebhookEndpoint","getSwapInfo","createSwap","client","oauth","isExecuting","OauthWeblnProvider","_this2$auth$token","enabled","isBrowser","_temp2","openAuthorization","payment_preimage","_wasThrown2","_result3","_wasThrown3","_result4","alias","_this8","parseInt","payment_request","_this9","processingCode","_temp5","info"],"mappings":"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"}