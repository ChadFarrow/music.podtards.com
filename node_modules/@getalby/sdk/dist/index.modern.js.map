{"version":3,"file":"index.modern.js","sources":["../src/utils.ts","../src/AlbyResponseError.ts","../src/request.ts","../src/OAuth2User.ts","../src/OAuth2Bearer.ts","../src/webln/NostrWeblnProvider.ts","../src/helpers.ts","../src/client.ts","../src/webln/OauthWeblnProvider.ts"],"sourcesContent":["// https://stackoverflow.com/a/62969380 + fix to remove empty entries (.filter(entry => entry))\nexport function buildQueryString(query: Record<string, unknown>): string {\n  return Object.entries(query)\n    .map(([key, value]) => (key && value ? `${key}=${value}` : \"\"))\n    .filter((entry) => entry)\n    .join(\"&\");\n}\n\nexport function basicAuthHeader(\n  client_id: string,\n  client_secret: string | undefined,\n) {\n  return `Basic ${btoa(`${client_id}:${client_secret}`)}`;\n}\n","export class AlbyResponseError extends Error {\n  status: number;\n  statusText: string;\n  headers: Record<string, any>;\n  error: any; // todo: typeable?\n  constructor(\n    status: number,\n    statusText: string,\n    headers: Headers,\n    error: any,\n  ) {\n    let message = status.toString();\n    if (statusText) {\n      message += ` ${statusText}`;\n    }\n    message += \": \";\n    if (error.message) {\n      message += error.message;\n    } else {\n      message += JSON.stringify(error);\n    }\n\n    super(message);\n    this.status = status;\n    this.statusText = statusText;\n    this.headers = headers;\n    this.error = error;\n  }\n}\n","import { buildQueryString } from \"./utils\";\nimport { AlbyResponseError, AuthClient } from \"./types\";\n\nconst BASE_URL = \"https://api.getalby.com\";\n\nexport interface RequestOptions extends Omit<RequestInit, \"body\"> {\n  auth?: AuthClient;\n  endpoint: string;\n  params?: Record<string, any>;\n  user_agent?: string;\n  request_body?: Record<string, any>;\n  method?: string;\n  max_retries?: number;\n  base_url?: string;\n}\n\nasync function fetchWithRetries(\n  url: RequestInfo,\n  init: RequestInit,\n  max_retries = 0,\n): Promise<Response> {\n  const res = await fetch(url, init);\n  if (res.status === 429 && max_retries > 0) {\n    const rateLimitReset = Number(res.headers.get(\"x-rate-limit-reset\"));\n    const rateLimitRemaining = Number(\n      res.headers.get(\"x-rate-limit-remaining\"),\n    );\n    const timeTillReset = rateLimitReset * 1000 - Date.now();\n    let timeToWait = 1000;\n    if (rateLimitRemaining === 0) timeToWait = timeTillReset;\n    await new Promise((resolve) => setTimeout(resolve, timeToWait));\n    return fetchWithRetries(url, init, max_retries - 1);\n  }\n  return res;\n}\n\nexport async function request({\n  auth,\n  endpoint,\n  params: query = {},\n  request_body,\n  method,\n  max_retries,\n  base_url = BASE_URL,\n  user_agent,\n  headers,\n  ...options\n}: RequestOptions): Promise<Response> {\n  const url = new URL(base_url + endpoint);\n  url.search = buildQueryString(query);\n  const isPost = method === \"POST\" && !!request_body;\n  const authHeader = auth\n    ? await auth.getAuthHeader(url.href, method)\n    : undefined;\n  const response = await fetchWithRetries(\n    url.toString(),\n    {\n      headers: {\n        ...(isPost\n          ? { \"Content-Type\": \"application/json; charset=utf-8\" }\n          : undefined),\n        ...authHeader,\n        ...headers,\n        ...{\n          \"User-Agent\": user_agent ?? \"@getalby/sdk\",\n          \"X-User-Agent\": user_agent ?? \"@getalby/sdk\",\n        },\n      },\n      method,\n      body: isPost ? JSON.stringify(request_body) : undefined,\n      ...options,\n    },\n    max_retries,\n  );\n  if (!response.ok) {\n    const error = await response.json();\n    throw new AlbyResponseError(\n      response.status,\n      response.statusText,\n      response.headers,\n      error,\n    );\n  }\n  return response;\n}\n\nexport async function rest<T = any>(args: RequestOptions): Promise<T> {\n  const response = await request(args);\n  return response.json() as any;\n}\n","import CryptoJS from \"crypto-js\";\nimport { buildQueryString, basicAuthHeader } from \"./utils\";\nimport {\n  OAuthClient,\n  AuthHeader,\n  GetTokenResponse,\n  Token,\n  GenerateAuthUrlOptions,\n} from \"./types\";\nimport { RequestOptions, rest } from \"./request\";\nimport EventEmitter from \"events\";\n\nconst AUTHORIZE_URL = \"https://getalby.com/oauth\";\n\nexport type OAuth2Scopes =\n  | \"account:read\"\n  | \"invoices:create\"\n  | \"invoices:read\"\n  | \"transactions:read\"\n  | \"balance:read\"\n  | \"payments:send\";\n\nexport interface OAuth2UserOptions {\n  client_id: string;\n  client_secret?: string;\n  callback: string;\n  scopes: OAuth2Scopes[];\n  request_options?: Partial<RequestOptions>;\n  user_agent: string;\n  token?: Token;\n}\n\nexport type TokenRefreshedListener = (tokens: Token) => void;\nexport type TokenRefreshFailedListener = (error: Error) => void;\nexport type EventName = \"tokenRefreshed\" | \"tokenRefreshFailed\";\nexport type EventListener = TokenRefreshedListener | TokenRefreshFailedListener;\n\nfunction processTokenResponse(token: GetTokenResponse): Token {\n  const { expires_in, ...rest } = token;\n  return {\n    ...rest,\n    ...(!!expires_in && {\n      expires_at: Date.now() + expires_in * 1000,\n    }),\n  };\n}\n\nexport class OAuth2User implements OAuthClient {\n  token?: Token;\n  options: OAuth2UserOptions;\n  code_verifier?: string;\n  code_challenge?: string;\n  private _refreshAccessTokenPromise: Promise<{ token: Token }> | null;\n  private _tokenEvents: EventEmitter;\n\n  constructor(options: OAuth2UserOptions) {\n    this._tokenEvents = new EventEmitter();\n    const { token, ...defaultOptions } = options;\n    this.options = { client_secret: \"\", ...defaultOptions };\n    this.token = token;\n    this._refreshAccessTokenPromise = null;\n  }\n\n  /**\n   * Subscribe to the events\n   */\n  on(eventName: EventName, listener: EventListener): void {\n    this._tokenEvents.on(eventName, listener);\n  }\n\n  /**\n   * Refresh the access token\n   */\n  async refreshAccessToken(): Promise<{ token: Token }> {\n    if (this._refreshAccessTokenPromise) {\n      return this._refreshAccessTokenPromise;\n    }\n    this._refreshAccessTokenPromise = new Promise(async (resolve, reject) => {\n      try {\n        const refresh_token = this.token?.refresh_token;\n        const { client_id, client_secret, request_options, user_agent } =\n          this.options;\n        if (!client_id) {\n          throw new Error(\"client_id is required\");\n        }\n        if (!refresh_token) {\n          throw new Error(\"refresh_token is required\");\n        }\n        const data = await rest<GetTokenResponse>({\n          ...request_options,\n          endpoint: `/oauth/token`,\n          params: {\n            client_id,\n            grant_type: \"refresh_token\",\n            refresh_token,\n          },\n          user_agent,\n          method: \"POST\",\n          headers: {\n            ...request_options?.headers,\n            \"Content-type\": \"application/x-www-form-urlencoded\",\n            ...{\n              Authorization: basicAuthHeader(client_id, client_secret),\n            },\n          },\n        });\n        const token = processTokenResponse(data);\n        this.token = token;\n        resolve({ token });\n        this._tokenEvents.emit(\"tokenRefreshed\", this.token);\n      } catch (error) {\n        console.log(error);\n        reject(error);\n        this._tokenEvents.emit(\"tokenRefreshFailed\", error);\n      } finally {\n        this._refreshAccessTokenPromise = null;\n      }\n    });\n    return this._refreshAccessTokenPromise;\n  }\n\n  /**\n   * Check if an access token is expired\n   */\n  isAccessTokenExpired(): boolean {\n    const refresh_token = this.token?.refresh_token;\n    const expires_at = this.token?.expires_at;\n    if (!expires_at) return true;\n    return !!refresh_token && expires_at <= Date.now() + 1000;\n  }\n\n  /**\n   * Request an access token\n   */\n  async requestAccessToken(code?: string): Promise<{ token: Token }> {\n    const { client_id, client_secret, callback, request_options, user_agent } =\n      this.options;\n    const code_verifier = this.code_verifier;\n    if (!client_id) {\n      throw new Error(\"client_id is required\");\n    }\n    if (!client_secret && !code_verifier) {\n      throw new Error(\"either client_secret is required, or code should be generated using a challenge\");\n    }\n    if (!callback) {\n      throw new Error(\"callback is required\");\n    }\n    const params = {\n      code,\n      grant_type: \"authorization_code\",\n      code_verifier,\n      client_id,\n      redirect_uri: callback,\n    };\n    const data = await rest<GetTokenResponse>({\n      ...request_options,\n      endpoint: `/oauth/token`,\n      params,\n      user_agent,\n      method: \"POST\",\n      headers: {\n        ...request_options?.headers,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        ...{\n          Authorization: basicAuthHeader(client_id, client_secret),\n        },\n      },\n    });\n    const token = processTokenResponse(data);\n    this.token = token;\n    return { token };\n  }\n\n  generateAuthURL(options?: GenerateAuthUrlOptions): string {\n    if (!options) {\n      options = {};\n    }\n    console.log(options);\n    const { client_id, callback, scopes } = this.options;\n    if (!callback) throw new Error(\"callback required\");\n    if (!scopes) throw new Error(\"scopes required\");\n    let code_challenge_method;\n    if (options.code_challenge_method === \"S256\") {\n      const code_verifier = CryptoJS.lib.WordArray.random(64);\n      this.code_verifier = code_verifier.toString();\n      this.code_challenge = CryptoJS.SHA256(this.code_verifier)\n        .toString(CryptoJS.enc.Base64)\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/\\=+$/, \"\");\n      code_challenge_method = \"S256\";\n    } else if (\n      options.code_challenge_method === \"plain\" &&\n      options.code_challenge\n    ) {\n      this.code_challenge = options.code_challenge;\n      this.code_verifier = options.code_challenge;\n      code_challenge_method = \"plain\";\n    }\n    const code_challenge = this.code_challenge;\n    const url = new URL(options.authorizeUrl || AUTHORIZE_URL);\n    url.search = buildQueryString({\n      ...options,\n      client_id,\n      scope: scopes.join(\" \"),\n      response_type: \"code\",\n      redirect_uri: callback,\n      code_challenge_method,\n      code_challenge,\n    });\n    return url.toString();\n  }\n\n  async getAuthHeader(): Promise<AuthHeader> {\n    if (!this.token?.access_token) throw new Error(\"access_token is required\");\n    if (this.isAccessTokenExpired()) {\n      await this.refreshAccessToken();\n    }\n    return {\n      Authorization: `Bearer ${this.token.access_token}`,\n    };\n  }\n}\n","import { AuthClient, AuthHeader } from \"./types\";\n\nexport class OAuth2Bearer implements AuthClient {\n  private bearer_token: string;\n\n  constructor(bearer_token: string) {\n    this.bearer_token = bearer_token;\n  }\n\n  getAuthHeader(): AuthHeader {\n    return {\n      Authorization: `Bearer ${this.bearer_token}`,\n    };\n  }\n}\n","import {\n  nip04,\n  relayInit,\n  getEventHash,\n  nip19,\n  generatePrivateKey,\n  getPublicKey,\n  Relay,\n  Event,\n  UnsignedEvent,\n  finishEvent,\n  Kind,\n} from \"nostr-tools\";\nimport {\n  GetBalanceResponse,\n  KeysendArgs,\n  RequestInvoiceArgs,\n  MakeInvoiceResponse,\n  SendPaymentResponse,\n  SignMessageResponse,\n  WebLNNode,\n  WebLNProvider,\n  WebLNRequestMethod,\n  LookupInvoiceArgs,\n  LookupInvoiceResponse,\n} from \"@webbtc/webln-types\";\nimport { GetInfoResponse } from \"@webbtc/webln-types\";\nimport { GetNWCAuthorizationUrlOptions } from \"../types\";\n\nconst NWCs: Record<string, NostrWebLNOptions> = {\n  alby: {\n    authorizationUrl: \"https://nwc.getalby.com/apps/new\",\n    relayUrl: \"wss://relay.getalby.com/v1\",\n    walletPubkey:\n      \"69effe7b49a6dd5cf525bd0905917a5005ffe480b58eeb8e861418cf3ae760d9\",\n  },\n};\n\ninterface NostrWebLNOptions {\n  authorizationUrl?: string; // the URL to the NWC interface for the user to confirm the session\n  relayUrl: string;\n  walletPubkey: string;\n  secret?: string;\n}\n\ntype Nip07Provider = {\n  getPublicKey(): Promise<string>;\n  signEvent(event: UnsignedEvent): Promise<Event>;\n};\n\nconst nip47ToWeblnRequestMap = {\n  get_balance: \"getBalance\",\n  make_invoice: \"makeInvoice\",\n  pay_invoice: \"sendPayment\",\n  lookup_invoice: \"lookupInvoice\",\n};\n\nexport class NostrWebLNProvider implements WebLNProvider, Nip07Provider {\n  relay: Relay;\n  relayUrl: string;\n  secret: string | undefined;\n  walletPubkey: string;\n  options: NostrWebLNOptions;\n  subscribers: Record<string, (payload: unknown) => void>;\n\n  static parseWalletConnectUrl(walletConnectUrl: string) {\n    walletConnectUrl = walletConnectUrl\n      .replace(\"nostrwalletconnect://\", \"http://\")\n      .replace(\"nostr+walletconnect://\", \"http://\"); // makes it possible to parse with URL in the different environments (browser/node/...)\n    const url = new URL(walletConnectUrl);\n    const options = {} as NostrWebLNOptions;\n    options.walletPubkey = url.host;\n    const secret = url.searchParams.get(\"secret\");\n    const relayUrl = url.searchParams.get(\"relay\");\n    if (secret) {\n      options.secret = secret;\n    }\n    if (relayUrl) {\n      options.relayUrl = relayUrl;\n    }\n    return options;\n  }\n\n  static withNewSecret(\n    options?: ConstructorParameters<typeof NostrWebLNProvider>[0],\n  ) {\n    options = options || {};\n    options.secret = generatePrivateKey();\n    return new NostrWebLNProvider(options);\n  }\n\n  constructor(options?: {\n    providerName?: string;\n    authorizationUrl?: string;\n    relayUrl?: string;\n    secret?: string;\n    walletPubkey?: string;\n    nostrWalletConnectUrl?: string;\n  }) {\n    if (options && options.nostrWalletConnectUrl) {\n      options = {\n        ...NostrWebLNProvider.parseWalletConnectUrl(\n          options.nostrWalletConnectUrl,\n        ),\n        ...options,\n      };\n    }\n    const providerOptions = NWCs[\n      options?.providerName || \"alby\"\n    ] as NostrWebLNOptions;\n    this.options = {\n      ...providerOptions,\n      ...(options || {}),\n    } as NostrWebLNOptions;\n    this.relayUrl = this.options.relayUrl;\n    this.relay = relayInit(this.relayUrl);\n    if (this.options.secret) {\n      this.secret = (\n        this.options.secret.toLowerCase().startsWith(\"nsec\")\n          ? nip19.decode(this.options.secret).data\n          : this.options.secret\n      ) as string;\n    }\n    this.walletPubkey = (\n      this.options.walletPubkey.toLowerCase().startsWith(\"npub\")\n        ? nip19.decode(this.options.walletPubkey).data\n        : this.options.walletPubkey\n    ) as string;\n    this.subscribers = {};\n\n    if (globalThis.WebSocket === undefined) {\n      console.error(\n        \"WebSocket is undefined. Make sure to `import websocket-polyfill` for nodejs environments\",\n      );\n    }\n  }\n\n  on(name: string, callback: () => void) {\n    this.subscribers[name] = callback;\n  }\n\n  notify(name: string, payload?: unknown) {\n    const callback = this.subscribers[name];\n    if (callback) {\n      callback(payload);\n    }\n  }\n\n  getNostrWalletConnectUrl(includeSecret = true) {\n    let url = `nostr+walletconnect://${this.walletPubkey}?relay=${this.relayUrl}&pubkey=${this.publicKey}`;\n    if (includeSecret) {\n      url = `${url}&secret=${this.secret}`;\n    }\n    return url;\n  }\n\n  get nostrWalletConnectUrl() {\n    return this.getNostrWalletConnectUrl();\n  }\n\n  get connected() {\n    return this.relay.status === 1;\n  }\n\n  get publicKey() {\n    if (!this.secret) {\n      throw new Error(\"Missing secret key\");\n    }\n    return getPublicKey(this.secret);\n  }\n\n  getPublicKey(): Promise<string> {\n    return Promise.resolve(this.publicKey);\n  }\n\n  signEvent(event: UnsignedEvent): Promise<Event> {\n    if (!this.secret) {\n      throw new Error(\"Missing secret key\");\n    }\n\n    return Promise.resolve(finishEvent(event, this.secret));\n  }\n\n  getEventHash(event: Event) {\n    return getEventHash(event);\n  }\n\n  async enable() {\n    if (this.connected) {\n      return Promise.resolve();\n    }\n    await this.relay.connect();\n  }\n\n  close() {\n    return this.relay.close();\n  }\n\n  async encrypt(pubkey: string, content: string) {\n    if (!this.secret) {\n      throw new Error(\"Missing secret\");\n    }\n    const encrypted = await nip04.encrypt(this.secret, pubkey, content);\n    return encrypted;\n  }\n\n  async decrypt(pubkey: string, content: string) {\n    if (!this.secret) {\n      throw new Error(\"Missing secret\");\n    }\n    const decrypted = await nip04.decrypt(this.secret, pubkey, content);\n    return decrypted;\n  }\n\n  // WebLN compatible response\n  // TODO: use NIP-47 get_info call\n  async getInfo(): Promise<GetInfoResponse> {\n    return {\n      methods: [\n        \"getInfo\",\n        \"sendPayment\",\n        \"makeInvoice\",\n        \"getBalance\",\n        \"lookupInvoice\",\n      ],\n      node: {} as WebLNNode,\n      supports: [\"lightning\"],\n      version: \"NWC\",\n    };\n  }\n\n  getBalance() {\n    this.checkConnected();\n\n    return this.executeNip47Request<GetBalanceResponse, { balance: number }>(\n      \"get_balance\",\n      undefined,\n      (result) => result.balance !== undefined,\n      (result) => ({\n        // NWC uses msats - convert to sats for webln\n        balance: Math.floor(result.balance / 1000),\n        currency: \"sats\",\n      }),\n    );\n  }\n\n  sendPayment(invoice: string) {\n    this.checkConnected();\n\n    return this.executeNip47Request<SendPaymentResponse, { preimage: string }>(\n      \"pay_invoice\",\n      {\n        invoice,\n      },\n      (result) => !!result.preimage,\n      (result) => ({ preimage: result.preimage }),\n    );\n  }\n\n  // not-yet implemented WebLN interface methods\n  keysend(args: KeysendArgs): Promise<SendPaymentResponse> {\n    throw new Error(\"Method not implemented.\");\n  }\n  lnurl(\n    lnurl: string,\n  ): Promise<{ status: \"OK\" } | { status: \"ERROR\"; reason: string }> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  makeInvoice(args: string | number | RequestInvoiceArgs) {\n    this.checkConnected();\n\n    const requestInvoiceArgs: RequestInvoiceArgs | undefined =\n      typeof args === \"object\" ? (args as RequestInvoiceArgs) : undefined;\n    const amount = +(requestInvoiceArgs?.amount ?? (args as string | number));\n\n    if (!amount) {\n      throw new Error(\"No amount specified\");\n    }\n\n    return this.executeNip47Request<MakeInvoiceResponse, { invoice: string }>(\n      \"make_invoice\",\n      {\n        amount: amount * 1000, // NIP-47 uses msat\n        description: requestInvoiceArgs?.defaultMemo,\n        // TODO: support additional fields below\n        //expiry: 86500,\n        //description_hash: \"b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9\"\n      },\n      (result) => !!result.invoice,\n      (result) => ({ paymentRequest: result.invoice }),\n    );\n  }\n\n  lookupInvoice(args: LookupInvoiceArgs) {\n    this.checkConnected();\n\n    return this.executeNip47Request<\n      LookupInvoiceResponse,\n      { invoice: string; paid: boolean }\n    >(\n      \"lookup_invoice\",\n      args,\n      (result) => result.invoice !== undefined && result.paid !== undefined,\n      (result) => ({ paymentRequest: result.invoice, paid: result.paid }),\n    );\n  }\n\n  request(method: WebLNRequestMethod, args?: unknown): Promise<unknown> {\n    throw new Error(\"Method not implemented.\");\n  }\n  signMessage(message: string): Promise<SignMessageResponse> {\n    throw new Error(\"Method not implemented.\");\n  }\n  verifyMessage(signature: string, message: string): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  getAuthorizationUrl(options?: GetNWCAuthorizationUrlOptions) {\n    if (!this.options.authorizationUrl) {\n      throw new Error(\"Missing authorizationUrl option\");\n    }\n    const url = new URL(this.options.authorizationUrl);\n    if (options?.name) {\n      url.searchParams.set(\"c\", options?.name);\n    }\n    url.searchParams.set(\"pubkey\", this.publicKey);\n    if (options?.returnTo) {\n      url.searchParams.set(\"return_to\", options.returnTo);\n    }\n\n    if (options?.budgetRenewal) {\n      url.searchParams.set(\"budget_renewal\", options.budgetRenewal);\n    }\n    if (options?.expiresAt) {\n      url.searchParams.set(\n        \"expires_at\",\n        Math.floor(options.expiresAt.getTime() / 1000).toString(),\n      );\n    }\n    if (options?.maxAmount) {\n      url.searchParams.set(\"max_amount\", options.maxAmount.toString());\n    }\n    if (options?.editable !== undefined) {\n      url.searchParams.set(\"editable\", options.editable.toString());\n    }\n\n    return url;\n  }\n\n  initNWC(options: GetNWCAuthorizationUrlOptions = {}) {\n    // here we assume an browser context and window/document is available\n    // we set the location.host as a default name if none is given\n    if (!options.name) {\n      options.name = document.location.host;\n    }\n    const url = this.getAuthorizationUrl(options);\n    const height = 600;\n    const width = 400;\n    const top = window.outerHeight / 2 + window.screenY - height / 2;\n    const left = window.outerWidth / 2 + window.screenX - width / 2;\n\n    return new Promise((resolve, reject) => {\n      const popup = window.open(\n        url.toString(),\n        `${document.title} - Wallet Connect`,\n        `height=${height},width=${width},top=${top},left=${left}`,\n      );\n      if (!popup) {\n        reject();\n        return;\n      } // only for TS?\n\n      const checkForPopup = () => {\n        if (popup && popup.closed) {\n          reject();\n          clearInterval(popupChecker);\n          window.removeEventListener(\"message\", onMessage);\n        }\n      };\n\n      const onMessage = (message: {\n        data?: { type: \"nwc:success\" | unknown };\n        origin: string;\n      }) => {\n        const data = message.data;\n        if (\n          data &&\n          data.type === \"nwc:success\" &&\n          message.origin === `${url.protocol}//${url.host}`\n        ) {\n          resolve(data);\n          clearInterval(popupChecker);\n          window.removeEventListener(\"message\", onMessage);\n          if (popup) {\n            popup.close(); // close the popup\n          }\n        }\n      };\n      const popupChecker = setInterval(checkForPopup, 500);\n      window.addEventListener(\"message\", onMessage);\n    });\n  }\n\n  private checkConnected() {\n    if (!this.connected) {\n      throw new Error(\n        \"please call enable() and await the promise before calling this function\",\n      );\n    }\n  }\n\n  private executeNip47Request<T, R>(\n    nip47Method: keyof typeof nip47ToWeblnRequestMap,\n    params: unknown,\n    resultValidator: (result: R) => boolean,\n    resultMapper: (result: R) => T,\n  ) {\n    const weblnMethod = nip47ToWeblnRequestMap[nip47Method];\n    return new Promise<T>((resolve, reject) => {\n      (async () => {\n        const command = {\n          method: nip47Method,\n          params,\n        };\n        const encryptedCommand = await this.encrypt(\n          this.walletPubkey,\n          JSON.stringify(command),\n        );\n        const unsignedEvent: UnsignedEvent = {\n          kind: 23194 as Kind,\n          created_at: Math.floor(Date.now() / 1000),\n          tags: [[\"p\", this.walletPubkey]],\n          content: encryptedCommand,\n          pubkey: this.publicKey,\n        };\n\n        const event = await this.signEvent(unsignedEvent);\n        // subscribe to NIP_47_SUCCESS_RESPONSE_KIND and NIP_47_ERROR_RESPONSE_KIND\n        // that reference the request event (NIP_47_REQUEST_KIND)\n        const sub = this.relay.sub([\n          {\n            kinds: [23195],\n            authors: [this.walletPubkey],\n            \"#e\": [event.id],\n          },\n        ]);\n\n        function replyTimeout() {\n          sub.unsub();\n          //console.error(`Reply timeout: event ${event.id} `);\n          reject({\n            error: `reply timeout: event ${event.id}`,\n            code: \"INTERNAL\",\n          });\n        }\n\n        const replyTimeoutCheck = setTimeout(replyTimeout, 60000);\n\n        sub.on(\"event\", async (event) => {\n          //console.log(`Received reply event: `, event);\n          clearTimeout(replyTimeoutCheck);\n          sub.unsub();\n          const decryptedContent = await this.decrypt(\n            this.walletPubkey,\n            event.content,\n          );\n          let response;\n          try {\n            response = JSON.parse(decryptedContent);\n          } catch (e) {\n            reject({ error: \"invalid response\", code: \"INTERNAL\" });\n            return;\n          }\n          // @ts-ignore // event is still unknown in nostr-tools\n          if (event.kind == 23195 && response.result) {\n            //console.log(\"NIP-47 result\", response.result);\n            if (resultValidator(response.result)) {\n              resolve(resultMapper(response.result));\n              this.notify(weblnMethod, response.result);\n            } else {\n              reject({\n                error:\n                  \"Response from NWC failed validation: \" +\n                  JSON.stringify(response.result),\n                code: \"INTERNAL\",\n              });\n            }\n          } else {\n            reject({\n              error: response.error?.message,\n              code: response.error?.code,\n            });\n          }\n        });\n\n        function publishTimeout() {\n          //console.error(`Publish timeout: event ${event.id}`);\n          reject({ error: `Publish timeout: event ${event.id}` });\n        }\n        const publishTimeoutCheck = setTimeout(publishTimeout, 5000);\n\n        try {\n          await this.relay.publish(event);\n          clearTimeout(publishTimeoutCheck);\n          //console.debug(`Event ${event.id} for ${invoice} published`);\n        } catch (error) {\n          //console.error(`Failed to publish to ${this.relay.url}`, error);\n          clearTimeout(publishTimeoutCheck);\n          reject({ error: `Failed to publish request: ${error}` });\n        }\n      })();\n    });\n  }\n}\n\nexport const NWC = NostrWebLNProvider;\n","import { SendBoostagramRequestParams } from \"./types\";\n\nexport function keysendParamsFromBoostagram(\n  boostagramParams: SendBoostagramRequestParams,\n) {\n  const customRecords: Record<string, string> = {};\n  if (\n    boostagramParams.recipient.customKey &&\n    boostagramParams.recipient.customValue\n  ) {\n    customRecords[boostagramParams.recipient.customKey] =\n      boostagramParams.recipient.customValue;\n  }\n  // https://github.com/lightning/blips/blob/master/blip-0010.md\n  customRecords[\"7629169\"] = JSON.stringify(boostagramParams.boostagram);\n\n  return {\n    destination: boostagramParams.recipient.address,\n    amount: boostagramParams.amount,\n    customRecords: customRecords,\n  };\n}\n","import { OAuth2Bearer } from \"./auth\";\nimport { keysendParamsFromBoostagram } from \"./helpers\";\nimport { RequestOptions, rest } from \"./request\";\nimport {\n  AuthClient,\n  BaseWebhookEndpointResponse,\n  CreateSwapParams,\n  CreateSwapResponse,\n  CreateWebhookEndpointParams,\n  CreateWebhookEndpointResponse,\n  DecodedInvoice,\n  GetAccountBalanceResponse,\n  GetAccountInformationResponse,\n  GetInvoicesRequestParams,\n  Invoice,\n  InvoiceRequestParams,\n  KeysendRequestParams,\n  SendBoostagramRequestParams,\n  SendPaymentRequestParams,\n  SendPaymentResponse,\n  SendBoostagramToAlbyRequestParams,\n  SwapInfoResponse,\n} from \"./types\";\n\nexport class Client {\n  auth: AuthClient;\n  defaultRequestOptions?: Partial<RequestOptions>;\n\n  constructor(\n    auth: string | AuthClient,\n    requestOptions?: Partial<RequestOptions>,\n  ) {\n    this.auth = typeof auth === \"string\" ? new OAuth2Bearer(auth) : auth;\n    this.defaultRequestOptions = {\n      ...requestOptions,\n      user_agent: requestOptions?.user_agent,\n    };\n  }\n\n  accountBalance(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ): Promise<GetAccountBalanceResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/balance`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  accountSummary(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ) {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/user/summary`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  accountInformation(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ): Promise<GetAccountInformationResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/user/me`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  accountValue4Value(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params: {},\n    request_options?: Partial<RequestOptions>,\n  ) {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/user/value4value`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  incomingInvoices(\n    params: GetInvoicesRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice[]> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices/incoming`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  outgoingInvoices(\n    params: GetInvoicesRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice[]> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices/outgoing`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  invoices(\n    params: GetInvoicesRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice[]> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices`,\n      params,\n      method: \"GET\",\n    });\n  }\n\n  getInvoice(\n    paymentHash: string,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices/${paymentHash}`,\n      method: \"GET\",\n    });\n  }\n\n  decodeInvoice(\n    paymentRequest: string,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<DecodedInvoice> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/decode/bolt11/${paymentRequest}`,\n      method: \"GET\",\n    });\n  }\n\n  createInvoice(\n    invoice: InvoiceRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<Invoice> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/invoices`,\n      request_body: invoice,\n      method: \"POST\",\n    });\n  }\n\n  keysend(\n    args: KeysendRequestParams | KeysendRequestParams[],\n    request_options?: Partial<RequestOptions>,\n  ): Promise<SendPaymentResponse> {\n    let endpoint, request_body;\n    if (Array.isArray(args)) {\n      endpoint = \"/payments/keysend/multi\";\n      request_body = { keysends: args };\n    } else {\n      endpoint = \"/payments/keysend\";\n      request_body = args;\n    }\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint,\n      request_body,\n      method: \"POST\",\n    });\n  }\n\n  sendPayment(\n    params: SendPaymentRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<SendPaymentResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/payments/bolt11`,\n      request_body: params,\n      method: \"POST\",\n    });\n  }\n\n  sendBoostagram(\n    args: SendBoostagramRequestParams | SendBoostagramRequestParams[],\n    request_options?: Partial<RequestOptions>,\n  ) {\n    let endpoint, request_body;\n    if (Array.isArray(args)) {\n      endpoint = \"/payments/keysend/multi\";\n      const keysends = args.map((b) => keysendParamsFromBoostagram(b));\n      request_body = { keysends };\n    } else {\n      endpoint = \"/payments/keysend\";\n      request_body = keysendParamsFromBoostagram(args);\n    }\n\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint,\n      request_body,\n      method: \"POST\",\n    });\n  }\n\n  /**\n   * @deprecated please use sendBoostagramToAlbyAccount. Deprecated since v2.7.0. Will be removed in v3.0.0.\n   */\n  sendToAlbyAccount(\n    args: SendBoostagramToAlbyRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ) {\n    console.warn(\n      \"sendToAlbyAccount is deprecated. Please use sendBoostagramToAlbyAccount instead.\",\n    );\n    return this.sendBoostagramToAlbyAccount(args, request_options);\n  }\n\n  sendBoostagramToAlbyAccount(\n    args: SendBoostagramToAlbyRequestParams,\n    request_options?: Partial<RequestOptions>,\n  ) {\n    const params = {\n      destination:\n        \"030a58b8653d32b99200a2334cfe913e51dc7d155aa0116c176657a4f1722677a3\",\n      customRecords: {\n        \"696969\": args.account,\n      },\n      amount: args.amount,\n      memo: args.memo,\n    };\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/payments/keysend`,\n      request_body: params,\n      method: \"POST\",\n    });\n  }\n\n  createWebhookEndpoint(\n    params: CreateWebhookEndpointParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<CreateWebhookEndpointResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/webhook_endpoints`,\n      request_body: params,\n      method: \"POST\",\n    });\n  }\n\n  deleteWebhookEndpoint(\n    id: string,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<BaseWebhookEndpointResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/webhook_endpoints/${id}`,\n      method: \"DELETE\",\n    });\n  }\n\n  getSwapInfo(\n    request_options?: Partial<RequestOptions>,\n  ): Promise<SwapInfoResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/swaps/info`,\n      method: \"GET\",\n    });\n  }\n\n  createSwap(\n    params: CreateSwapParams,\n    request_options?: Partial<RequestOptions>,\n  ): Promise<CreateSwapResponse> {\n    return rest({\n      auth: this.auth,\n      ...this.defaultRequestOptions,\n      ...request_options,\n      endpoint: `/swaps`,\n      method: \"POST\",\n      request_body: params,\n    });\n  }\n}\n","import { Client } from \"../client\";\nimport { OAuthClient, KeysendRequestParams } from \"../types\";\n\ninterface RequestInvoiceArgs {\n  amount: string | number;\n  defaultMemo?: string;\n}\n\nconst isBrowser = () =>\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\nexport class OauthWeblnProvider {\n  client: Client;\n  auth: OAuthClient;\n  oauth: boolean;\n  subscribers: Record<string, (payload: any) => void>;\n  isExecuting: boolean;\n\n  constructor(options: { auth: OAuthClient }) {\n    this.auth = options.auth;\n    this.client = new Client(options.auth);\n    this.oauth = true;\n    this.subscribers = {};\n    this.isExecuting = false;\n  }\n\n  on(name: string, callback: () => void) {\n    this.subscribers[name] = callback;\n  }\n\n  notify(name: string, payload?: any) {\n    const callback = this.subscribers[name];\n    if (callback) {\n      callback(payload);\n    }\n  }\n\n  async enable() {\n    if (this.isExecuting) {\n      return;\n    }\n    if (this.auth.token?.access_token) {\n      return { enabled: true };\n    }\n    if (isBrowser()) {\n      try {\n        this.isExecuting = true;\n        const result = await this.openAuthorization();\n      } finally {\n        this.isExecuting = false;\n      }\n    } else {\n      throw new Error(\"Missing access token\");\n    }\n  }\n\n  async sendPayment(invoice: string) {\n    if (this.isExecuting) {\n      return;\n    }\n    try {\n      this.isExecuting = true;\n      const result = await this.client.sendPayment({ invoice });\n      this.notify(\"sendPayment\", result);\n      return {\n        preimage: result.payment_preimage,\n      };\n    } catch (error) {\n      let message = \"Unknown Error\";\n      if (error instanceof Error) message = error.message;\n      throw new Error(message);\n    } finally {\n      this.isExecuting = false;\n    }\n  }\n\n  async keysend(params: KeysendRequestParams) {\n    if (this.isExecuting) {\n      return;\n    }\n    try {\n      this.isExecuting = true;\n      const result = await this.client.keysend(params);\n      this.notify(\"keysend\", result);\n      return {\n        preimage: result.payment_preimage,\n      };\n    } catch (error) {\n      let message = \"Unknown Error\";\n      if (error instanceof Error) message = error.message;\n      throw new Error(message);\n    } finally {\n      this.isExecuting = false;\n    }\n  }\n\n  async getInfo() {\n    return {\n      alias: \"Alby\",\n    };\n  }\n\n  async makeInvoice(params: RequestInvoiceArgs) {\n    if (this.isExecuting) {\n      return;\n    }\n    try {\n      this.isExecuting = true;\n      const result = await this.client.createInvoice({\n        amount: parseInt(params.amount.toString()),\n        description: params.defaultMemo,\n      });\n      this.notify(\"makeInvoice\", result);\n      return {\n        paymentRequest: result.payment_request,\n      };\n    } catch (error) {\n      let message = \"Unknown Error\";\n      if (error instanceof Error) message = error.message;\n      throw new Error(message);\n    } finally {\n      this.isExecuting = false;\n    }\n  }\n\n  openAuthorization() {\n    const height = 700;\n    const width = 600;\n    const top = window.outerHeight / 2 + window.screenY - height / 2;\n    const left = window.outerWidth / 2 + window.screenX - width / 2;\n    const url = this.auth.generateAuthURL({ code_challenge_method: \"S256\" });\n\n    return new Promise((resolve, reject) => {\n      const popup = window.open(\n        url,\n        `${document.title} - WebLN enable`,\n        `height=${height},width=${width},top=${top},left=${left}`,\n      );\n      let processingCode = false;\n      window.addEventListener(\"message\", async (message) => {\n        const data = message.data;\n        if (\n          data &&\n          data.type === \"alby:oauth:success\" &&\n          message.origin ===\n            `${document.location.protocol}//${document.location.host}` &&\n          !processingCode\n        ) {\n          processingCode = true; // make sure we request the access token only once\n          console.info(\"Processing OAuth code response\");\n          const code = data.payload.code;\n          try {\n            await this.auth.requestAccessToken(code);\n            this.client = new Client(this.auth); // just to make sure we got a client with the correct auth and not the access token\n            if (popup) {\n              popup.close();\n            }\n            this.notify(\"enable\");\n            resolve({ enabled: true });\n          } catch (e) {\n            console.error(e);\n            reject({ enabled: false });\n          }\n        }\n      });\n    });\n  }\n}\n"],"names":["buildQueryString","query","Object","entries","map","key","value","filter","entry","join","basicAuthHeader","client_id","client_secret","btoa","Error","constructor","status","statusText","headers","error","message","toString","JSON","stringify","super","this","_excluded","async","fetchWithRetries","url","init","max_retries","fetch","res","rateLimitReset","Number","get","rateLimitRemaining","timeTillReset","Date","now","timeToWait","resolve","setTimeout","request","_ref","auth","endpoint","params","request_body","method","base_url","BASE_URL","user_agent","options","_objectWithoutPropertiesLoose","URL","search","getAuthHeader","href","undefined","response","_extends","isPost","authHeader","body","ok","json","args","processTokenResponse","token","expires_in","rest","expires_at","OAuth2Bearer","bearer_token","Authorization","code_verifier","code_challenge","_refreshAccessTokenPromise","_tokenEvents","EventEmitter","defaultOptions","_excluded2","on","eventName","listener","_this","Promise","reject","_this$token","refresh_token","request_options","grant_type","emit","console","log","isAccessTokenExpired","_this$token2","_this$token3","code","callback","redirect_uri","generateAuthURL","scopes","code_challenge_method","CryptoJS","lib","WordArray","random","SHA256","enc","Base64","replace","authorizeUrl","scope","response_type","_this$token4","access_token","refreshAccessToken","NWCs","alby","authorizationUrl","relayUrl","walletPubkey","nip47ToWeblnRequestMap","get_balance","make_invoice","pay_invoice","lookup_invoice","NostrWebLNProvider","static","walletConnectUrl","host","secret","searchParams","generatePrivateKey","_options","relay","subscribers","nostrWalletConnectUrl","parseWalletConnectUrl","providerOptions","providerName","relayInit","toLowerCase","startsWith","nip19","decode","data","globalThis","WebSocket","name","notify","payload","getNostrWalletConnectUrl","includeSecret","publicKey","connected","getPublicKey","signEvent","event","finishEvent","getEventHash","connect","close","pubkey","content","nip04","encrypt","decrypt","methods","node","supports","version","getBalance","checkConnected","executeNip47Request","result","balance","Math","floor","currency","sendPayment","invoice","preimage","keysend","lnurl","makeInvoice","_requestInvoiceArgs$a","requestInvoiceArgs","amount","description","defaultMemo","paymentRequest","lookupInvoice","paid","signMessage","verifyMessage","signature","getAuthorizationUrl","set","returnTo","budgetRenewal","expiresAt","getTime","maxAmount","editable","initNWC","document","location","top","window","outerHeight","screenY","height","left","outerWidth","screenX","width","popup","open","title","onMessage","type","origin","protocol","clearInterval","popupChecker","removeEventListener","setInterval","closed","addEventListener","nip47Method","resultValidator","resultMapper","command","encryptedCommand","unsignedEvent","kind","created_at","tags","sub","kinds","authors","id","replyTimeoutCheck","unsub","clearTimeout","decryptedContent","parse","e","_response$error","_response$error2","weblnMethod","publishTimeoutCheck","publish","NWC","keysendParamsFromBoostagram","boostagramParams","customRecords","recipient","customKey","customValue","boostagram","destination","address","requestOptions","defaultRequestOptions","accountBalance","accountSummary","accountInformation","accountValue4Value","incomingInvoices","outgoingInvoices","invoices","getInvoice","paymentHash","decodeInvoice","createInvoice","Array","isArray","keysends","sendBoostagram","b","sendToAlbyAccount","warn","sendBoostagramToAlbyAccount","account","memo","createWebhookEndpoint","deleteWebhookEndpoint","getSwapInfo","createSwap","OauthWeblnProvider","client","oauth","isExecuting","_this$auth$token","enabled","openAuthorization","payment_preimage","alias","parseInt","payment_request","processingCode","info","requestAccessToken"],"mappings":"kiBACgBA,SAAAA,EAAiBC,GAC/B,OAAOC,OAAOC,QAAQF,GACnBG,IAAI,EAAEC,EAAKC,KAAYD,GAAOC,EAAW,GAAAD,KAAOC,IAAU,IAC1DC,OAAQC,GAAUA,GAClBC,KAAK,IACV,CAEgBC,SAAAA,EACdC,EACAC,GAEA,MAAO,SAASC,KAAQ,GAAAF,KAAaC,MACvC,CCbM,gBAAiCE,MAKrCC,YACEC,EACAC,EACAC,EACAC,GAEA,IAAWC,EAAGJ,EAAOK,WACjBJ,IACFG,GAAW,IAAIH,KAEjBG,GAAW,KAETA,GADED,EAAMC,QACGD,EAAMC,QAENE,KAAKC,UAAUJ,GAG5BK,MAAMJ,GAASK,KArBjBT,YACAC,EAAAA,KAAAA,gBACAC,EAAAA,KAAAA,aACAC,EAAAA,KAAAA,aAmBEM,KAAKT,OAASA,EACdS,KAAKR,WAAaA,EAClBQ,KAAKP,QAAUA,EACfO,KAAKN,MAAQA,CACf,oFC3BF,MAAAO,EAAA,CAAA,OAAA,WAAA,SAAA,eAAA,SAAA,cAAA,WAAA,aAAA,aAGiB,0BAajBC,eAAeC,EACbC,EACAC,EACAC,EAAc,GAEd,cAAuBC,MAACH,EAAKC,GAC7B,GAAmB,MAAfG,EAAIjB,QAAkBe,EAAc,EAAG,CACzC,MAAMG,EAAiBC,OAAOF,EAAIf,QAAQkB,IAAI,uBACtBC,EAAGF,OACzBF,EAAIf,QAAQkB,IAAI,2BAEZE,EAAiC,IAAjBJ,EAAwBK,KAAKC,MACnD,IAAcC,EAAG,IAGjB,OAF2B,IAAvBJ,IAA0BI,EAAaH,SACrC,YAAaI,GAAYC,WAAWD,EAASD,IAC5Cb,EAAiBC,EAAKC,EAAMC,EAAc,EAClD,CACD,QACF,gBAE6Ba,EAAAC,GAAC,IAAAC,KAC5BA,EAAIC,SACJA,EACAC,OAAQ/C,EAAQ,CAAA,EAAEgD,aAClBA,EAAYC,OACZA,EAAMnB,YACNA,EAAWoB,SACXA,EAAWC,EAAQC,WACnBA,EAAUnC,QACVA,KACGoC,EAAOC,EAAAV,EAAAnB,GAEV,MAASG,EAAG,IAAI2B,IAAIL,EAAWJ,GAC/BlB,EAAI4B,OAASzD,EAAiBC,GAC9B,QAA0B,SAAXiD,KAAuBD,IACnBH,UACJY,cAAc7B,EAAI8B,KAAMT,QACnCU,EACUC,QAAyBjC,EACrCC,EAAIR,WAAUyC,EAAA,CAEZ5C,QACM6C,EAAAA,GAAAA,EACA,CAAE,eAAgB,wCAClBH,EACDI,EACA9C,EACA,CACD,aAAcmC,MAAAA,EAAAA,EAAc,eAC5B,eAAgBA,MAAAA,EAAAA,EAAc,iBAGlCH,SACAe,KAAMF,EAASzC,KAAKC,UAAU0B,QAAgBW,GAC3CN,GAELvB,GAEF,IAAK8B,EAASK,GAAI,CAChB,MAAW/C,QAAiB0C,EAACM,OAC7B,MAAM,MACJN,EAAS7C,OACT6C,EAAS5C,WACT4C,EAAS3C,QACTC,EAEH,CACD,OACF0C,CAAA,CAEOlC,iBAA6ByC,GAElC,aAD8BxB,EAACwB,IACfD,MAClB,oCCpDA,SAA6BE,EAACC,GAC5B,MAAMC,WAAEA,GAAwBD,EAChC,OACKE,EAAAA,CAAAA,EAF2BF,EAAAA,OAGxBC,GAAc,CAClBE,WAAYlC,KAAKC,MAAqB,IAAb+B,GAG/B,CC3CaG,MAAAA,EAGX3D,YAAY4D,GAAoBlD,KAFxBkD,kBAAY,EAGlBlD,KAAKkD,aAAeA,CACtB,CAEAjB,gBACE,MAAO,CACLkB,cAAe,UAAUnD,KAAKkD,eAElC,yCD0CA5D,YAAYuC,GAA0B7B,KAPtC6C,WAAK,EAAA7C,KACL6B,aACAuB,EAAAA,KAAAA,0BACAC,oBAAc,EAAArD,KACNsD,gCACAC,EAAAA,KAAAA,kBAGN,EAAAvD,KAAKuD,aAAe,IAAIC,EACxB,MAAMX,MAAEA,GAA6BhB,EAAnB4B,EAAc3B,EAAKD,EACrC6B,GAAA1D,KAAK6B,QAAOQ,EAAA,CAAKlD,cAAe,IAAOsE,GACvCzD,KAAK6C,MAAQA,EACb7C,KAAKsD,2BAA6B,IACpC,CAKAK,GAAGC,EAAsBC,GACvB7D,KAAKuD,aAAaI,GAAGC,EAAWC,EAClC,CAKA3D,2BACE,IAAA4D,EAAA9D,KAAA,OAAIA,KAAKsD,6BAGTtD,KAAKsD,2BAA6B,IAAWS,QAAC7D,eAAOe,EAAS+C,GAC5D,IACE,IAAAC,EAAA,MAAmBC,EAAG,OAAHD,EAAGH,EAAKjB,YAAL,EAAAoB,EAAYC,eAC5BhF,UAAEA,EAASC,cAAEA,EAAagF,gBAAEA,EAAevC,WAAEA,GACjDkC,EAAKjC,QACP,IAAK3C,EACH,UAAeG,MAAC,yBAElB,IAAK6E,EACH,UAAe7E,MAAC,6BAElB,MAkBMwD,EAAQD,QAlBKG,EACdoB,EAAAA,CAAAA,EAAAA,GACH7C,SAAwB,eACxBC,OAAQ,CACNrC,YACAkF,WAAY,gBACZF,iBAEFtC,aACAH,OAAQ,OACRhC,QACK0E,EAAAA,CAAAA,QAAAA,SAAAA,EAAiB1E,QACpB,CAAA,eAAgB,qCACb,CACD0D,cAAelE,EAAgBC,EAAWC,SAKhD2E,EAAKjB,MAAQA,EACb5B,EAAQ,CAAE4B,UACViB,EAAKP,aAAac,KAAK,iBAAkBP,EAAKjB,MAO/C,CANC,MAAOnD,GACP4E,QAAQC,IAAI7E,GACZsE,EAAOtE,GACPoE,EAAKP,aAAac,KAAK,qBAAsB3E,EAC9C,CAAA,QACCoE,EAAKR,2BAA6B,IACnC,CACH,IA1CStD,KAAKsD,0BA4ChB,CAKAkB,uBAAoB,IAAAC,EAAAC,EAClB,MAAMR,EAAgB,SAAAlE,KAAK6C,YAAL,EAAA4B,EAAYP,cAClBlB,EAAG,OAAH0B,EAAG1E,KAAK6C,YAAL,EAAA6B,EAAY1B,WAC/B,OAAKA,KACIkB,GAAiBlB,GAAclC,KAAKC,MAAQ,GACvD,CAKAb,yBAAyByE,GACvB,MAAMzF,UAAEA,EAASC,cAAEA,EAAayF,SAAEA,EAAQT,gBAAEA,EAAevC,WAAEA,GAC3D5B,KAAK6B,QACDuB,EAAgBpD,KAAKoD,cAC3B,IAAKlE,EACH,MAAUG,IAAAA,MAAM,yBAElB,IAAKF,IAAkBiE,EACrB,UAAe/D,MAAC,mFAElB,IAAKuF,EACH,MAAM,UAAU,wBAElB,QAAe,CACbD,OACAP,WAAY,qBACZhB,gBACAlE,YACA2F,aAAcD,GAgBV/B,EAAQD,QAdKG,OACdoB,EAAe,CAClB7C,SAAwB,eACxBC,SACAK,aACAH,OAAQ,OACRhC,aACoB,MAAf0E,OAAe,EAAfA,EAAiB1E,QAAO,CAC3B,eAAgB,qCACb,CACD0D,cAAelE,EAAgBC,EAAWC,SAMhD,OADAa,KAAK6C,MAAQA,EACN,CAAEA,QACX,CAEAiC,gBAAgBjD,GACTA,IACHA,EAAU,CACX,GACDyC,QAAQC,IAAI1C,GACZ,MAAM3C,UAAEA,EAAS0F,SAAEA,EAAQG,OAAEA,GAAW/E,KAAK6B,QAC7C,IAAK+C,EAAU,MAAUvF,IAAAA,MAAM,qBAC/B,IAAK0F,EAAQ,MAAU1F,IAAAA,MAAM,mBAC7B,MACA,GAAsC,SAAlCwC,EAAQmD,sBAAkC,CAC5C,MAAmB5B,EAAG6B,EAASC,IAAIC,UAAUC,OAAO,IACpDpF,KAAKoD,cAAgBA,EAAcxD,WACnCI,KAAKqD,eAAiB4B,EAASI,OAAOrF,KAAKoD,eACxCxD,SAASqF,EAASK,IAAIC,QACtBC,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,OAAQ,IACnBR,EAAwB,MACzB,KACmC,UAAlCnD,EAAQmD,uBACRnD,EAAQwB,iBAERrD,KAAKqD,eAAiBxB,EAAQwB,eAC9BrD,KAAKoD,cAAgBvB,EAAQwB,eAC7B2B,EAAwB,SAE1B,QAAuBhF,KAAKqD,eACnBjD,EAAG,IAAI2B,IAAIF,EAAQ4D,cA5LV,6BAsMlB,OATArF,EAAI4B,OAASzD,EACRsD,EAAAA,CAAAA,EAAAA,GACH3C,YACAwG,MAAOX,EAAO/F,KAAK,KACnB2G,cAAe,OACfd,aAAcD,EACdI,wBACA3B,sBAESzD,UACb,CAEAM,sBAAmB,IAAA0F,EACjB,GAAK,OAADA,EAAC5F,KAAK6C,SAAL+C,EAAYC,aAAc,UAAexG,MAAC,4BAI/C,OAHIW,KAAKwE,8BACGxE,KAAC8F,qBAEN,CACL3C,cAAyB,UAAAnD,KAAK6C,MAAMgD,eAExC,mBEhMF,MAAUE,EAAsC,CAC9CC,KAAM,CACJC,iBAAkB,mCAClBC,SAAU,6BACVC,aACE,qEAgBsBC,EAAG,CAC7BC,YAAa,aACbC,aAAc,cACdC,YAAa,cACbC,eAAgB,uBAGaC,EAQ7BC,6BAA6BC,GAC3BA,EAAmBA,EAChBnB,QAAQ,wBAAyB,WACjCA,QAAQ,yBAA0B,WACrC,QAAY,IAAOzD,IAAC4E,GACP9E,EAAG,CAAA,EAChBA,EAAQsE,aAAe/F,EAAIwG,KAC3B,MAAMC,EAASzG,EAAI0G,aAAanG,IAAI,UACtBuF,EAAG9F,EAAI0G,aAAanG,IAAI,SAOtC,OANIkG,IACFhF,EAAQgF,OAASA,GAEfX,IACFrE,EAAQqE,SAAWA,GAGvBrE,CAAA,CAEA6E,qBACE7E,GAIA,OAFAA,EAAUA,GAAW,CAAE,GACfgF,OAASE,QACYN,EAAC5E,EAChC,CAEAvC,YAAYuC,GAOX,IAAAmF,EAAAhH,KAxCDiH,WAAK,EAAAjH,KACLkG,cAAQ,EAAAlG,KACR6G,YACAV,EAAAA,KAAAA,kBACAtE,EAAAA,KAAAA,aACAqF,EAAAA,KAAAA,iBAoCE,EAAIrF,GAAWA,EAAQsF,wBACrBtF,EAAOQ,EAAA,CAAA,EACFoE,EAAmBW,sBACpBvF,EAAQsF,uBAEPtF,IAGP,MAAqBwF,EAAGtB,GACtB,OAAAlE,EAAAA,QAAA,EAAAmF,EAASM,eAAgB,QAE3BtH,KAAK6B,QAAOQ,EAAA,CAAA,EACPgF,EACCxF,GAAW,CAAA,GAEjB7B,KAAKkG,SAAWlG,KAAK6B,QAAQqE,SAC7BlG,KAAKiH,MAAQM,EAAUvH,KAAKkG,UACxBlG,KAAK6B,QAAQgF,SACf7G,KAAK6G,OACH7G,KAAK6B,QAAQgF,OAAOW,cAAcC,WAAW,QACzCC,EAAMC,OAAO3H,KAAK6B,QAAQgF,QAAQe,KAClC5H,KAAK6B,QAAQgF,QAGrB7G,KAAKmG,aACHnG,KAAK6B,QAAQsE,aAAaqB,cAAcC,WAAW,QAC/CC,EAAMC,OAAO3H,KAAK6B,QAAQsE,cAAcyB,KACxC5H,KAAK6B,QAAQsE,aAEnBnG,KAAKkH,YAAc,CAAA,OAEU/E,IAAzB0F,WAAWC,WACbxD,QAAQ5E,MACN,2FAGN,CAEAiE,GAAGoE,EAAcnD,GACf5E,KAAKkH,YAAYa,GAAQnD,CAC3B,CAEAoD,OAAOD,EAAcE,GACnB,MAAMrD,EAAW5E,KAAKkH,YAAYa,GAC9BnD,GACFA,EAASqD,EAEb,CAEAC,yBAAyBC,GAAgB,GACvC,IAAO/H,EAA4B,yBAAAJ,KAAKmG,sBAAsBnG,KAAKkG,mBAAmBlG,KAAKoI,YAI3F,OAHID,IACF/H,KAASA,YAAcJ,KAAK6G,UAEvBzG,CACT,CAEyB+G,4BACvB,OAAOnH,KAAKkI,0BACd,CAEIG,gBACF,OAA6B,IAAtBrI,KAAKiH,MAAM1H,MACpB,CAEI6I,gBACF,IAAKpI,KAAK6G,OACR,MAAUxH,IAAAA,MAAM,sBAElB,OAAOiJ,EAAatI,KAAK6G,OAC3B,CAEAyB,eACE,OAAOvE,QAAQ9C,QAAQjB,KAAKoI,UAC9B,CAEAG,UAAUC,GACR,IAAKxI,KAAK6G,OACR,MAAUxH,IAAAA,MAAM,sBAGlB,OAAc0E,QAAC9C,QAAQwH,EAAYD,EAAOxI,KAAK6G,QACjD,CAEA6B,aAAaF,GACX,OAAOE,EAAaF,EACtB,CAEAtI,eACE,GAAIF,KAAKqI,UACP,OAActE,QAAC9C,gBAEXjB,KAAKiH,MAAM0B,SACnB,CAEAC,QACE,OAAW5I,KAACiH,MAAM2B,OACpB,CAEA1I,cAAc2I,EAAgBC,GAC5B,IAAK9I,KAAK6G,OACR,MAAM,IAASxH,MAAC,kBAGlB,aAD6B0J,EAACC,QAAQhJ,KAAK6G,OAAQgC,EAAQC,EAE7D,CAEA5I,cAAc2I,EAAgBC,GAC5B,IAAK9I,KAAK6G,OACR,MAAUxH,IAAAA,MAAM,kBAGlB,aAD6B0J,EAACE,QAAQjJ,KAAK6G,OAAQgC,EAAQC,EAE7D,CAIA5I,gBACE,MAAO,CACLgJ,QAAS,CACP,UACA,cACA,cACA,aACA,iBAEFC,KAAM,CAAA,EACNC,SAAU,CAAC,aACXC,QAAS,MAEb,CAEAC,aAGE,OAFAtJ,KAAKuJ,iBAEEvJ,KAAKwJ,oBACV,mBACArH,EACCsH,QAA8BtH,IAAnBsH,EAAOC,QAClBD,IAAY,CAEXC,QAASC,KAAKC,MAAMH,EAAOC,QAAU,KACrCG,SAAU,SAGhB,CAEAC,YAAYC,GAGV,OAFA/J,KAAKuJ,iBAEEvJ,KAAKwJ,oBACV,cACA,CACEO,WAEDN,KAAaA,EAAOO,SACpBP,IAAY,CAAEO,SAAUP,EAAOO,WAEpC,CAGAC,QAAQtH,GACN,MAAM,IAAStD,MAAC,0BAClB,CACA6K,MACEA,GAEA,MAAU7K,IAAAA,MAAM,0BAClB,CAEA8K,YAAYxH,GAA0C,IAAAyH,EACpDpK,KAAKuJ,iBAEL,MAAwBc,EACN,iBAAT1H,EAAqBA,OAA8BR,EACtDmI,IAAqC,OAA5BF,EAAoB,MAAlBC,OAAkB,EAAlBA,EAAoBC,QAAMF,EAAKzH,GAEhD,IAAK2H,EACH,MAAUjL,IAAAA,MAAM,uBAGlB,OAAWW,KAACwJ,oBACV,eACA,CACEc,OAAiB,IAATA,EACRC,YAA+B,MAAlBF,OAAkB,EAAlBA,EAAoBG,aAKlCf,KAAaA,EAAOM,QACpBN,IAAY,CAAEgB,eAAgBhB,EAAOM,UAE1C,CAEAW,cAAc/H,GAGZ,OAFA3C,KAAKuJ,iBAEMvJ,KAACwJ,oBAIV,iBACA7G,EACC8G,QAA8BtH,IAAnBsH,EAAOM,cAAyC5H,IAAhBsH,EAAOkB,KAClDlB,IAAM,CAAQgB,eAAgBhB,EAAOM,QAASY,KAAMlB,EAAOkB,OAEhE,CAEAxJ,QAAQM,EAA4BkB,GAClC,MAAUtD,IAAAA,MAAM,0BAClB,CACAuL,YAAYjL,GACV,MAAM,IAASN,MAAC,0BAClB,CACAwL,cAAcC,EAAmBnL,GAC/B,MAAUN,IAAAA,MAAM,0BAClB,CAEA0L,oBAAoBlJ,GAClB,IAAK7B,KAAK6B,QAAQoE,iBAChB,UAAe5G,MAAC,mCAElB,MAASe,EAAG,IAAI2B,IAAI/B,KAAK6B,QAAQoE,kBAyBjC,OAxBW,MAAPpE,GAAAA,EAASkG,MACX3H,EAAI0G,aAAakE,IAAI,IAAY,MAAPnJ,OAAO,EAAPA,EAASkG,MAErC3H,EAAI0G,aAAakE,IAAI,SAAUhL,KAAKoI,WACzB,MAAPvG,GAAAA,EAASoJ,UACX7K,EAAI0G,aAAakE,IAAI,YAAanJ,EAAQoJ,UAGxCpJ,MAAAA,GAAAA,EAASqJ,eACX9K,EAAI0G,aAAakE,IAAI,iBAAkBnJ,EAAQqJ,eAE7CrJ,MAAAA,GAAAA,EAASsJ,WACX/K,EAAI0G,aAAakE,IACf,aACArB,KAAKC,MAAM/H,EAAQsJ,UAAUC,UAAY,KAAMxL,YAG/CiC,MAAAA,GAAAA,EAASwJ,WACXjL,EAAI0G,aAAakE,IAAI,aAAcnJ,EAAQwJ,UAAUzL,iBAE7BuC,KAAf,MAAPN,OAAO,EAAPA,EAASyJ,WACXlL,EAAI0G,aAAakE,IAAI,WAAYnJ,EAAQyJ,SAAS1L,YAItDQ,CAAA,CAEAmL,QAAQ1J,EAAyC,CAAA,GAG1CA,EAAQkG,OACXlG,EAAQkG,KAAOyD,SAASC,SAAS7E,MAEnC,MAASxG,EAAGJ,KAAK+K,oBAAoBlJ,GAG/B6J,EAAMC,OAAOC,YAAc,EAAID,OAAOE,QAAUC,IAChDC,EAAOJ,OAAOK,WAAa,EAAIL,OAAOM,QAAUC,IAEtD,OAAO,IAAWnI,QAAC,CAAC9C,EAAS+C,KAC3B,MAAWmI,EAAGR,OAAOS,KACnBhM,EAAIR,WACD,GAAA4L,SAASa,yBACF,4BAA6BX,UAAYK,KAErD,IAAKI,EAEH,YADAnI,IAIF,MAQesI,EAAI3M,IAIjB,MAAUiI,EAAGjI,EAAQiI,KAEnBA,GACc,gBAAdA,EAAK2E,MACL5M,EAAQ6M,SAAW,GAAGpM,EAAIqM,aAAarM,EAAIwG,SAE3C3F,EAAQ2G,GACR8E,cAAcC,GACdhB,OAAOiB,oBAAoB,UAAWN,GAClCH,GACFA,EAAMvD,QAET,EAEG+D,EAAeE,YA1BC,KAChBV,GAASA,EAAMW,SACjB9I,IACA0I,cAAcC,GACdhB,OAAOiB,oBAAoB,UAAWN,GACvC,EAqB6C,KAChDX,OAAOoB,iBAAiB,UAAWT,EACrC,EACF,CAEQ/C,iBACN,IAAKvJ,KAAKqI,UACR,MAAUhJ,IAAAA,MACR,0EAGN,CAEQmK,oBACNwD,EACAzL,EACA0L,EACAC,GAEA,IAAApJ,EAAA9D,KAAA,QAAoBoG,EAAuB4G,GAC3C,OAAO,IAAWjJ,QAAI,CAAC9C,EAAS+C,MAC9B,iBACE,MAAMmJ,EAAU,CACd1L,OAAQuL,EACRzL,UAEI6L,QAA6BtJ,EAACkF,QAClClF,EAAKqC,aACLtG,KAAKC,UAAUqN,IAEEE,EAAkB,CACnCC,KAAM,MACNC,WAAY5D,KAAKC,MAAM9I,KAAKC,MAAQ,KACpCyM,KAAM,CAAC,CAAC,IAAK1J,EAAKqC,eAClB2C,QAASsE,EACTvE,OAAQ/E,EAAKsE,WAGJI,QAAS1E,EAAKyE,UAAU8E,GAG1BI,EAAG3J,EAAKmD,MAAMwG,IAAI,CACzB,CACEC,MAAO,CAAC,OACRC,QAAS,CAAC7J,EAAKqC,cACf,KAAM,CAACqC,EAAMoF,OAaMC,EAAG3M,WAT1B,WACEuM,EAAIK,QAEJ9J,EAAO,CACLtE,MAAO,wBAAwB8I,EAAMoF,KACrCjJ,KAAM,YAEV,EAEmD,KAEnD8I,EAAI9J,GAAG,QAASzD,eAAOsI,GAErBuF,aAAaF,GACbJ,EAAIK,QACJ,MAAsBE,QAASlK,EAAKmF,QAClCnF,EAAKqC,aACLqC,EAAMM,SAER,IAAY1G,EACZ,IACEA,EAAWvC,KAAKoO,MAAMD,EAIvB,CAHC,MAAOE,GAEP,YADAlK,EAAO,CAAEtE,MAAO,mBAAoBiF,KAAM,YAE3C,CAeM,IAAAwJ,EAAAC,EAbW,OAAd5F,EAAM8E,MAAiBlL,EAASqH,OAE9BwD,EAAgB7K,EAASqH,SAC3BxI,EAAQiM,EAAa9K,EAASqH,SAC9B3F,EAAKkE,OAAOqG,EAAajM,EAASqH,SAElCzF,EAAO,CACLtE,MACE,wCACAG,KAAKC,UAAUsC,EAASqH,QAC1B9E,KAAM,aAIVX,EAAO,CACLtE,MAAO,OAAA0C,EAAAA,EAAS1C,YAAT,EAAAyO,EAAgBxO,QACvBgF,KAAM,OAAAvC,EAAAA,EAAS1C,YAAT,EAAA0O,EAAgBzJ,MAG5B,GAMA,MAAM2J,EAAsBpN,WAJ5B,WAEE8C,EAAO,CAAEtE,MAAO,0BAA0B8I,EAAMoF,MAClD,EACuD,KAEvD,UACQ9J,EAAKmD,MAAMsH,QAAQ/F,GACzBuF,aAAaO,EAMd,CAJC,MAAO5O,GAEPqO,aAAaO,GACbtK,EAAO,CAAEtE,oCAAqCA,KAC/C,CACF,CA3FD,EA4FF,EACF,EAGK,MAAS8O,EAAG/H,EClgBHgI,SAAAA,EACdC,GAEA,MAAmBC,EAA2B,CAAA,EAW9C,OATED,EAAiBE,UAAUC,WAC3BH,EAAiBE,UAAUE,cAE3BH,EAAcD,EAAiBE,UAAUC,WACvCH,EAAiBE,UAAUE,aAG/BH,EAAc,SAAa9O,KAAKC,UAAU4O,EAAiBK,YAEpD,CACLC,YAAaN,EAAiBE,UAAUK,QACxC3E,OAAQoE,EAAiBpE,OACzBqE,cAAeA,EAEnB,SCOErP,YACE+B,EACA6N,GALF7N,KAAAA,iBACA8N,2BAAqB,EAMnBnP,KAAKqB,KAAuB,iBAATA,EAAoB,IAAgB4B,EAAC5B,GAAQA,EAChErB,KAAKmP,sBACAD,EAAAA,CAAAA,EAAAA,GACHtN,WAAYsN,MAAAA,OAAAA,EAAAA,EAAgBtN,YAEhC,CAEAwN,eAEE7N,EACA4C,GAEA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,GACH7C,SAAoB,WACpBC,SACAE,OAAQ,QAEZ,CAEA4N,eAEE9N,EACA4C,GAEA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EAAe,CAClB7C,SAAyB,gBACzBC,SACAE,OAAQ,QAEZ,CAEA6N,mBAEE/N,EACA4C,GAEA,SACE9C,EAAAA,CAAAA,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,GACH7C,SAAoB,WACpBC,SACAE,OAAQ,QAEZ,CAEA8N,mBAEEhO,EACA4C,GAEA,OAAOpB,EACL1B,EAAAA,CAAAA,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EAAe,CAClB7C,SAA6B,oBAC7BC,SACAE,OAAQ,QAEZ,CAEA+N,iBACEjO,EACA4C,GAEA,SACE9C,EAAAA,CAAAA,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,SAA8B,qBAC9BC,SACAE,OAAQ,QAEZ,CAEAgO,iBACElO,EACA4C,GAEA,OAAOpB,KACL1B,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EAAe,CAClB7C,SAA8B,qBAC9BC,SACAE,OAAQ,QAEZ,CAEAiO,SACEnO,EACA4C,GAEA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,SAAqB,YACrBC,SACAE,OAAQ,QAEZ,CAEAkO,WACEC,EACAzL,GAEA,OAAOpB,KACL1B,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,GACH7C,SAAuB,aAAAsO,IACvBnO,OAAQ,QAEZ,CAEAoO,cACEpF,EACAtG,GAEA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,SAA4B,kBAAAmJ,IAC5BhJ,OAAQ,QAEZ,CAEAqO,cACE/F,EACA5F,GAEA,SACE9C,EAAAA,CAAAA,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,GACH7C,SAAqB,YACrBE,aAAcuI,EACdtI,OAAQ,SAEZ,CAEAwI,QACEtH,EACAwB,GAEA,IAAI7C,EAAUE,EAQd,OAPIuO,MAAMC,QAAQrN,IAChBrB,EAAW,0BACXE,EAAe,CAAEyO,SAAUtN,KAE3BrB,EAAW,oBACXE,EAAemB,GAENI,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,WACAE,eACAC,OAAQ,SAEZ,CAEAqI,YACEvI,EACA4C,GAEA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,SAA4B,mBAC5BE,aAAcD,EACdE,OAAQ,SAEZ,CAEAyO,eACEvN,EACAwB,GAEA,IAAY7C,EAAEE,EAUd,OATIuO,MAAMC,QAAQrN,IAChBrB,EAAW,0BAEXE,EAAe,CAAEyO,SADAtN,EAAKhE,IAAKwR,GAAM1B,EAA4B0B,OAG7D7O,EAAW,oBACXE,EAAeiN,EAA4B9L,MAI3CtB,EAAAA,CAAAA,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,WACAE,eACAC,OAAQ,SAEZ,CAKA2O,kBACEzN,EACAwB,GAKA,OAHAG,QAAQ+L,KACN,yFAEUC,4BAA4B3N,EAAMwB,EAChD,CAEAmM,4BACE3N,EACAwB,GAWA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,SAA6B,oBAC7BE,aAda,CACbwN,YACE,qEACFL,cAAe,CACb,OAAUhM,EAAK4N,SAEjBjG,OAAQ3H,EAAK2H,OACbkG,KAAM7N,EAAK6N,MAQX/O,OAAQ,SAEZ,CAEAgP,sBACElP,EACA4C,GAEA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EAAe,CAClB7C,SAA8B,qBAC9BE,aAAcD,EACdE,OAAQ,SAEZ,CAEAiP,sBACE9C,EACAzJ,GAEA,OAAOpB,KACL1B,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EAAe,CAClB7C,SAAgC,sBAAAsM,IAChCnM,OAAQ,WAEZ,CAEAkP,YACExM,GAEA,OAAOpB,KACL1B,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EAAe,CAClB7C,SAAuB,cACvBG,OAAQ,QAEZ,CAEAmP,WACErP,EACA4C,GAEA,OAAWpB,EAAAV,EAAA,CACThB,KAAMrB,KAAKqB,MACRrB,KAAKmP,sBACLhL,EACH7C,CAAAA,SAAkB,SAClBG,OAAQ,OACRD,aAAcD,IAElB,sEC7TWsP,MAOXvR,YAAYuC,GAA8B7B,KAN1C8Q,YACAzP,EAAAA,KAAAA,iBACA0P,WAAK,EAAA/Q,KACLkH,iBACA8J,EAAAA,KAAAA,mBAGEhR,KAAKqB,KAAOQ,EAAQR,KACpBrB,KAAK8Q,OAAS,MAAWjP,EAAQR,MACjCrB,KAAK+Q,OAAQ,EACb/Q,KAAKkH,YAAc,CAAA,EACnBlH,KAAKgR,aAAc,CACrB,CAEArN,GAAGoE,EAAcnD,GACf5E,KAAKkH,YAAYa,GAAQnD,CAC3B,CAEAoD,OAAOD,EAAcE,GACnB,MAAcrD,EAAG5E,KAAKkH,YAAYa,GAC9BnD,GACFA,EAASqD,EAEb,CAEA/H,qBACE,IAAIF,KAAKgR,YAAT,CAGA,GAAI,SAAAhR,KAAKqB,KAAKwB,QAAVoO,EAAiBpL,aACnB,MAAO,CAAEqL,SAAS,GAEpB,GAnCgB,iCAA0C,IAApBvF,OAAOH,SA2C3C,UAAenM,MAAC,wBAPhB,IACEW,KAAKgR,aAAc,aACOG,mBAG3B,CAFA,QACCnR,KAAKgR,aAAc,CACpB,CAVF,CAcH,CAEA9Q,kBAAkB6J,GAChB,IAAI/J,KAAKgR,YAGT,IACEhR,KAAKgR,aAAc,EACnB,MAAYvH,QAAazJ,KAAC8Q,OAAOhH,YAAY,CAAEC,YAE/C,OADA/J,KAAKgI,OAAO,cAAeyB,GACpB,CACLO,SAAUP,EAAO2H,iBAQpB,CANC,MAAO1R,GACP,IAAWC,EAAG,gBAEd,MADID,aAAiBL,QAAOM,EAAUD,EAAMC,SACtC,UAAUA,EACjB,CAAA,QACCK,KAAKgR,aAAc,CACpB,CACH,CAEA9Q,cAAcqB,GACZ,IAAIvB,KAAKgR,YAGT,IACEhR,KAAKgR,aAAc,EACnB,mBAA0BF,OAAO7G,QAAQ1I,GAEzC,OADAvB,KAAKgI,OAAO,UAAWyB,GAChB,CACLO,SAAUP,EAAO2H,iBAQpB,CANC,MAAO1R,GACP,MAAc,gBAEd,MADIA,aAAsBL,QAAEM,EAAUD,EAAMC,SAClCN,IAAAA,MAAMM,EACjB,CAAA,QACCK,KAAKgR,aAAc,CACpB,CACH,CAEA9Q,gBACE,MAAO,CACLmR,MAAO,OAEX,CAEAnR,kBAAkBqB,GAChB,IAAIvB,KAAKgR,YAGT,IACEhR,KAAKgR,aAAc,EACnB,MAAYvH,QAAazJ,KAAC8Q,OAAOhB,cAAc,CAC7CxF,OAAQgH,SAAS/P,EAAO+I,OAAO1K,YAC/B2K,YAAahJ,EAAOiJ,cAGtB,OADAxK,KAAKgI,OAAO,cAAeyB,GACpB,CACLgB,eAAgBhB,EAAO8H,gBAQ1B,CANC,MAAO7R,GACP,IAAIC,EAAU,gBAEd,MADID,aAAsBL,QAAEM,EAAUD,EAAMC,SAClCN,IAAAA,MAAMM,EACjB,CAAA,QACCK,KAAKgR,aAAc,CACpB,CACH,CAEAG,oBACE,IAAArN,EAAA9D,KAAA,MAES0L,EAAGC,OAAOC,YAAc,EAAID,OAAOE,QAAUC,IAC5CC,EAAGJ,OAAOK,WAAa,EAAIL,OAAOM,QAAUC,MAC1ClM,KAAKqB,KAAKyD,gBAAgB,CAAEE,sBAAuB,SAE/D,OAAO,YAAY,CAAC/D,EAAS+C,KAC3B,QAAc2H,OAAOS,KACnBhM,EACG,GAAAoL,SAASa,uBACZ,4BAAuCX,UAAYK,KAErD,OAAqB,EACrBJ,OAAOoB,iBAAiB,UAAW7M,eAAOP,GACxC,MAAUiI,EAAGjI,EAAQiI,KACrB,GACEA,GACc,uBAAdA,EAAK2E,MACL5M,EAAQ6M,SACH,GAAAhB,SAASC,SAASgB,aAAajB,SAASC,SAAS7E,SACrD4K,EACD,CACAA,GAAiB,EACjBlN,QAAQmN,KAAK,kCACb,MAAU9M,EAAGiD,EAAKK,QAAQtD,KAC1B,YACatD,KAAKqQ,mBAAmB/M,GACnCb,EAAKgN,OAAS,MAAWhN,EAAKzC,MAC1B8K,GACFA,EAAMvD,QAER9E,EAAKkE,OAAO,UACZ/G,EAAQ,CAAEiQ,SAAS,GAIpB,CAHC,MAAOhD,GACP5J,QAAQ5E,MAAMwO,GACdlK,EAAO,CAAEkN,SAAS,GACnB,CACF,CACH,EAAC,EAEL"}